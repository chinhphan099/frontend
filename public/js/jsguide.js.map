{"version":3,"sources":["guide.js","collapse.js","cookies.js","copy.js","date.js","gmap.js","number.js","pinchzoom.js","popup.js","sameheight.js","scrollbar.js","scrollto.js","select.js","slidemenu.js","slider.js","sticky.js","table.js","validates.js","video.js","youtube.js","zoomer.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChzaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzrllIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzjrdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrjpxfile":"jsguide.js","sourcesContent":["/**\r\n * @name Guide\r\n * @description Global variables and functions\r\n * @version 1.0\r\n */\r\n\r\nvar Guide = (function($, window, undefined) {\r\n  'use strict';\r\n\r\n  var win = $(window),\r\n    doc = $(document),\r\n    html = $('html'),\r\n    body = $('body'),\r\n    resize = ('onorientationchange' in window) ? 'orientationchange.resizeWindow' : 'resize.resizeWindow';\r\n\r\n  var globalFct = function() {\r\n  };\r\n\r\n  return {\r\n    win: win,\r\n    doc: doc,\r\n    html: html,\r\n    body: body,\r\n    resize: resize,\r\n    globalFct: globalFct\r\n  };\r\n\r\n})(jQuery, window);\r\n\r\njQuery(function() {\r\n  Guide.globalFct();\r\n});\r\n","/**\r\n *  @name collapse(both Tabs & Accordion)\r\n *  @version 1.0\r\n *  @author: Phan Chinh\r\n *  @options\r\n *    handle: '[data-handle]'\r\n *    content: '[data-content]'\r\n *    activeEl: '[data-active]'\r\n *    initEl: '[data-init]'\r\n *    closeEl: '[data-close]'\r\n *    duration: 300\r\n *    beforeOpen: $.noop\r\n *    afterOpen: $.noop\r\n *    beforeClose: $.noop\r\n *    afterClose: $.noop\r\n *  @events\r\n *    Handle click\r\n *    CloseEl click\r\n *    Window resize\r\n *  @methods\r\n *    init\r\n *    initialized\r\n *    listener\r\n *    close\r\n *    destroy\r\n */\r\n\r\n;(function($, window, undefined) {\r\n  'use strict';\r\n  var pluginName = 'collapse',\r\n    win = $(window),\r\n    collapseTimeout,\r\n    resize = ('onorientationchange' in window) ? 'orientationchange.resize' + pluginName : 'resize.resize' + pluginName;\r\n\r\n  function Plugin(element, options) {\r\n    this.element = $(element);\r\n    this.options = $.extend({}, $.fn[pluginName].defaults, this.element.data(), options, this.element.data(pluginName));\r\n    this.init();\r\n  }\r\n\r\n  Plugin.prototype = {\r\n    init: function() {\r\n      this.activeEl = this.element.find(this.options.activeEl);\r\n      this.handles = this.element.find(this.options.handle);\r\n      this.initEl = this.element.find(this.options.initEl);\r\n      this.contents = this.element.find(this.options.content);\r\n      this.activeContent = [];\r\n      this.closeEl = this.options.closeEl;\r\n      this.duration = this.options.duration;\r\n      this.isAnimating = false;\r\n      this.show = 'slideDown';\r\n      this.hide = 'slideUp';\r\n      this.initCls = this.options.initCls;\r\n      this.initSuccess = false;\r\n\r\n      if(this.options.effect === 'fade') {\r\n        this.show = 'fadeIn';\r\n        this.hide = 'fadeOut';\r\n      }\r\n      if(this.options.effect === 'slide') {\r\n        this.show = 'slideDown';\r\n        this.hide = 'slideUp';\r\n      }\r\n\r\n      this.checkEmptyContent();\r\n      this.resizeWindow();\r\n    },\r\n    checkEmptyContent: function() {\r\n      var that = this;\r\n      this.contents.each(function() {\r\n        var self = $(this),\r\n          handle = that.element.find('[data-handle=\"' + self.data('content') + '\"]');\r\n        if(!self.text().trim().length) {\r\n          handle.closest('[data-active]').remove();\r\n          self.remove();\r\n        }\r\n      });\r\n      this.initialized();\r\n    },\r\n    initialized: function() {\r\n      var that = this;\r\n\r\n      if(!!this.options.breakpoint) {\r\n        if(win.width() <= this.options.breakpoint) {\r\n          this.options.type = '';\r\n        }\r\n        else {\r\n          this.options.type = 'tab';\r\n        }\r\n      }\r\n\r\n      if(!!this.options.initUnder) {\r\n        if(win.width() <= this.options.initUnder) {\r\n          this.listener();\r\n          if(this.initEl.length) {\r\n            if(this.options.type === 'toggleSelf') {\r\n              this.initEl.each(function() {\r\n                that.toggleSelfEvent($(this));\r\n              });\r\n            }\r\n            else {\r\n              this.collapseContent(this.initEl);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        this.listener();\r\n        if(this.initEl.length) {\r\n          if(this.options.type === 'toggleSelf') {\r\n            this.initEl.each(function() {\r\n              that.toggleSelfEvent($(this));\r\n            });\r\n          }\r\n          else {\r\n            this.collapseContent(this.initEl);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    listener: function() {\r\n      var that = this;\r\n\r\n      this.element.addClass(this.initCls);\r\n\r\n      this.handles.off('click.changeTab' + pluginName).on('click.changeTab' + pluginName, function(e) {\r\n        var handle = $(this).closest(that.element).find('[data-handle=\"' + $(this).data('handle') + '\"]');\r\n\r\n        if($(this).data('active') === 'linkout' && $(this).hasClass('active')) {\r\n          return;\r\n        }\r\n        else if($(e.target).is('a') || $(e.target).parent().is('a')) {\r\n          e.preventDefault();\r\n        }\r\n\r\n        if(!that.isAnimating) {\r\n          if(that.options.type === 'toggleSelf') {\r\n            that.toggleSelfEvent(handle);\r\n          }\r\n          else {\r\n            that.collapseContent(handle);\r\n          }\r\n        }\r\n      });\r\n\r\n      that.contents.off('click.closeTab' + pluginName, this.closeEl).on('click.closeTab' + pluginName, this.closeEl, function(e) {\r\n        e.preventDefault();\r\n\r\n        if(!that.isAnimating) {\r\n          var childContentVisible = that.activeContent.find(that.options.content).not(':hidden');\r\n\r\n          if(childContentVisible.length) {\r\n            console.log('--- Close child Tabs - Button Close click ---');\r\n            childContentVisible.closest('[data-' + pluginName + ']')[pluginName]('close');\r\n          }\r\n\r\n          console.log('--- Close current tab ---');\r\n          that.close();\r\n        }\r\n        return false;\r\n      });\r\n    },\r\n    resizeWindow: function() {\r\n      var that = this;\r\n      win.off(resize).on(resize, function() {\r\n        if(collapseTimeout) {\r\n          clearTimeout(collapseTimeout);\r\n        }\r\n        collapseTimeout = setTimeout(function() {\r\n          $('[data-' + pluginName + ']').each(function() {\r\n            var breakpoint = $(this).data(pluginName).options.breakpoint,\r\n              initUnder = $(this).data(pluginName).options.initUnder;\r\n\r\n            if(!!breakpoint) {\r\n              if(win.width() <= breakpoint) {\r\n                $(this).data(pluginName).options.type = '';\r\n              }\r\n              else {\r\n                $(this).data(pluginName).options.type = 'tab';\r\n                if(!$(this).data(pluginName).activeContent.length && $(this).data(pluginName).initEl.length) {\r\n                  $(this).filter('[data-' + pluginName + ']')[pluginName]('collapseContent', $(this).data(pluginName).initEl);\r\n                }\r\n              }\r\n            }\r\n\r\n            if(!!initUnder) {\r\n              if(win.width() <= initUnder) {\r\n                if(!$(this).hasClass(that.initCls)) {\r\n                  $(this).filter('[data-' + pluginName + ']')[pluginName]('init');\r\n                }\r\n              }\r\n              else {\r\n                if($(this).hasClass(that.initCls)) {\r\n                  $(this).filter('[data-' + pluginName + ']')[pluginName]('destroy');\r\n                }\r\n              }\r\n            }\r\n          });\r\n        }, 300);\r\n      });\r\n    },\r\n    toggleSelfEvent: function(handle) {\r\n      var that = this,\r\n        content = handle.closest(this.element).find('[data-content=\"' + handle.data('handle') + '\"]');\r\n\r\n      that.isAnimating = true;\r\n      if(!handle.closest(this.activeEl).hasClass('active')) {\r\n        handle.addClass('active');\r\n        content.addClass('active')[that.show](this.duration, function() {\r\n          if($.isFunction(that.options.afterOpen)) {that.options.afterOpen(content, handle, that);}\r\n          that.isAnimating = false;\r\n        });\r\n      }\r\n      else {\r\n        handle.removeClass('active');\r\n        content.removeClass('active')[that.hide](this.duration, function() {\r\n          if($.isFunction(that.options.afterClose)) {that.options.afterClose(content, handle);}\r\n          that.isAnimating = false;\r\n        });\r\n      }\r\n    },\r\n    collapseContent: function(handle) {\r\n      var content = handle.closest(this.element).find('[data-content=\"' + handle.data('handle') + '\"]');\r\n\r\n      handle.find('input[type=\"radio\"]').prop('checked', true);\r\n      if(!content.length) {\r\n        this.noContent(handle);\r\n      }\r\n      else {\r\n        this.hasContent(handle, content);\r\n      }\r\n    },\r\n    noContent: function(handle) {\r\n      var that = this;\r\n      console.log('--- No Content ---');\r\n      this.activeEl.removeClass('active');\r\n      handle.closest(this.activeEl).addClass('active');\r\n\r\n      if(this.activeContent.length) {\r\n        this.isAnimating = true;\r\n        //- Before Close\r\n        if($.isFunction(that.options.beforeClose)) {that.options.beforeClose(that.activeContent);}\r\n        this.activeContent.removeClass('active')[this.hide](this.duration, function() {\r\n          //- After Close\r\n          if($.isFunction(that.options.afterClose)) {that.options.afterClose(that.activeContent);}\r\n          //- Remove activeContent\r\n          that.activeContent = [];\r\n          that.isAnimating = false;\r\n        });\r\n      }\r\n    },\r\n    hasContent: function(handle, content) {\r\n      if(this.activeContent.length) {\r\n        if(this.activeContent[0] !== content[0]) {\r\n          this.changeTab(handle, content);\r\n        }\r\n        else if(this.options.type !== 'tab') {\r\n          this.closeCurrentTab(handle);\r\n        }\r\n      }\r\n      else {\r\n        this.firstOpen(handle, content);\r\n      }\r\n    },\r\n    changeTab: function(handle, content) {\r\n      var that = this,\r\n        childContentVisible = this.activeContent.find(this.options.content).not(':hidden');\r\n\r\n      if(childContentVisible.length) {\r\n        console.log('--- Close child Tabs - Tab click ---');\r\n        childContentVisible.closest('[data-' + pluginName + ']')[pluginName]('close');\r\n      }\r\n\r\n      console.log('--- Change Tab ---');\r\n      //- Before Close\r\n      if($.isFunction(that.options.beforeClose)) {that.options.beforeClose(that.activeContent);}\r\n\r\n      this.isAnimating = true;\r\n      this.activeEl.removeClass('active');\r\n      this.activeContent.removeClass('active')[this.hide](this.duration, function() {\r\n        //- After Close\r\n        if($.isFunction(that.options.afterClose)) {that.options.afterClose(that.activeContent);}\r\n\r\n        //- Set new activeContent\r\n        that.activeContent = content;\r\n        //- Before Open\r\n        if($.isFunction(that.options.beforeOpen)) {that.options.beforeOpen(that.activeContent);}\r\n\r\n        handle.closest(that.activeEl).addClass('active');\r\n        that.activeContent.addClass('active')[that.show](this.duration, function() {\r\n          //- After Open\r\n          if($.isFunction(that.options.afterOpen)) {that.options.afterOpen(that.activeContent, handle, that);}\r\n          that.isAnimating = false;\r\n        });\r\n      });\r\n    },\r\n    closeCurrentTab: function(handle) {\r\n      var that = this,\r\n        childContentVisible = this.activeContent.find(this.options.content).not(':hidden');\r\n      if(childContentVisible.length) {\r\n        console.log('--- Close child Tabs - Tab click ---');\r\n        childContentVisible.closest('[data-' + pluginName + ']')[pluginName]('close');\r\n      }\r\n\r\n      console.log('--- Close current tab ---');\r\n      //- Before Close\r\n      if($.isFunction(that.options.beforeClose)) {that.options.beforeClose(that.activeContent);}\r\n\r\n      this.isAnimating = true;\r\n      handle.closest(this.activeEl).removeClass('active');\r\n      this.activeContent.removeClass('active')[this.hide](this.duration, function() {\r\n        //- After Close\r\n        if($.isFunction(that.options.afterClose)) {that.options.afterClose(that.activeContent);}\r\n        //- Remove activeContent\r\n        that.activeContent = [];\r\n        that.isAnimating = false;\r\n      });\r\n    },\r\n    firstOpen: function(handle, content) {\r\n      var that = this;\r\n      console.log('--- First open ---');\r\n\r\n      //- Set new activeContent\r\n      that.activeContent = content;\r\n      //- Before Open\r\n      if($.isFunction(that.options.beforeOpen)) {that.options.beforeOpen(that.activeContent);}\r\n\r\n      this.isAnimating = true;\r\n      this.activeEl.removeClass('active');\r\n      //handle.closest(this.activeEl).addClass('active');\r\n      this.element.find('[data-handle=\"' + handle.data('handle') + '\"]').closest(this.activeEl).addClass('active');\r\n      that.activeContent.addClass('active')[this.show](this.duration, function() {\r\n        //- After Open\r\n        if($.isFunction(that.options.afterOpen)) {that.options.afterOpen(that.activeContent, handle, that);}\r\n        that.isAnimating = false;\r\n      });\r\n    },\r\n    close: function() {\r\n      var that = this;\r\n\r\n      //- Before Close\r\n      if($.isFunction(that.options.beforeClose)) {that.options.beforeClose(that.activeContent);}\r\n\r\n      this.isAnimating = true;\r\n      this.activeEl.removeClass('active');\r\n      this.activeContent.removeClass('active')[this.hide](function() {\r\n        //- After Close\r\n        if($.isFunction(that.options.afterClose)) {that.options.afterClose(that.activeContent);}\r\n        //- Remove ActiveContent\r\n        that.activeContent = [];\r\n        that.isAnimating = false;\r\n      });\r\n    },\r\n    destroy: function() {\r\n      this.element.removeClass(this.initCls);\r\n      this.element.find(this.options.content).removeAttr('style').removeClass('active');\r\n      this.element.find(this.options.handle).removeClass('active');\r\n      this.activeContent = [];\r\n      this.isAnimating = false;\r\n      this.handles.off('click.changeTab' + pluginName);\r\n      //win.off(resize);\r\n      //$.removeData(this.element[0], pluginName);\r\n    }\r\n  };\r\n\r\n  $.fn[pluginName] = function(options, params) {\r\n    return this.each(function() {\r\n      var instance = $.data(this, pluginName);\r\n      if (!instance) {\r\n        $.data(this, pluginName, new Plugin(this, options));\r\n      } else if (instance[options]) {\r\n        instance[options](params);\r\n      }\r\n    });\r\n  };\r\n\r\n  $.fn[pluginName].defaults = {\r\n    handle: '[data-handle]',\r\n    content: '[data-content]',\r\n    activeEl: '[data-active]',\r\n    initEl: '[data-init]',\r\n    closeEl: '[data-close]',\r\n    initCls: 'initCollapse',\r\n    duration: 300,\r\n    htmlClass: '',\r\n    beforeClose: function(activeContent) {\r\n      console.log('beforeClose');\r\n      console.log(activeContent);\r\n    },\r\n    afterClose: function(activeContent) {\r\n      console.log('afterClose');\r\n      console.log(activeContent);\r\n      $('html').removeClass(this.htmlClass);\r\n      console.log(this.htmlClass);\r\n    },\r\n    beforeOpen: function(activeContent) {\r\n      $('html').addClass(this.htmlClass);\r\n      console.log('beforeOpen');\r\n      console.log(activeContent);\r\n    },\r\n    afterOpen: function(activeContent, handle, plugin) {\r\n      var topHandle = handle.offset().top,\r\n        topWindow = win.scrollTop();\r\n\r\n      if(activeContent.closest('.navigation .inner').length) {\r\n        Site.scrollTopAfterCollapse(activeContent.closest('.navigation .inner'), handle, true);\r\n      }\r\n      if(plugin.initSuccess) {\r\n        var gotop = handle.data('active');\r\n        if(gotop === 'gotop' &&\r\n          (topHandle < topWindow || topHandle > topWindow + win.height() / 1.25)) {\r\n          Site.scrollTopAfterCollapse($('html, body'), handle, false);\r\n        }\r\n      }\r\n      else {\r\n        plugin.initSuccess = true;\r\n      }\r\n    }\r\n  };\r\n\r\n  $(function() {\r\n    $('[data-' + pluginName + ']')[pluginName]();\r\n  });\r\n\r\n}(jQuery, window));\r\n","/**\r\n *  @name cookies\r\n *  @description description\r\n *  @version 1.0\r\n *  @options\r\n *    option\r\n *  @events\r\n *    event\r\n *  @methods\r\n *    init\r\n *    publicMethod\r\n *    destroy\r\n */\r\n;(function($, window, undefined) {\r\n  'use strict';\r\n\r\n  var pluginName = 'cookies';\r\n\r\n  function Plugin(element, options) {\r\n    this.element = $(element);\r\n    this.options = $.extend({}, this.element.data(), options, this.element.data(pluginName));\r\n    this.init();\r\n  }\r\n\r\n  Plugin.prototype = {\r\n    init: function() {\r\n      this.initialize();\r\n      this.listener();\r\n    },\r\n    initialize: function() {\r\n      // Check Cookie\r\n      if(this.readCookie('showSticky')) {\r\n        // Show sticky\r\n      }\r\n    },\r\n    listener: function() {\r\n      var that = this;\r\n      $('.close').off('click.' + pluginName).on('click.' + pluginName, function() {\r\n        that.createCookie('showSticky');\r\n      });\r\n      $(window).off('unload.' + pluginName).on('unload.' + pluginName, function() {\r\n        that.eraseCookie('showSticky');\r\n      });\r\n    },\r\n    createCookie: function(name, value, days) {\r\n      var expires = '';\r\n      if(days) {\r\n        var date = new Date();\r\n        date.setTime(date.getTime() + (days*24*60*60*1000));\r\n        expires = '; expires=' + date.toGMTString();\r\n      }\r\n      document.cookie = name + '=' + value + expires + '; path=/';\r\n    },\r\n    readCookie: function(name) {\r\n      var nameEQ = name + '=',\r\n        ca = document.cookie.split(';');\r\n\r\n      for(var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) === ' ') {\r\n          c = c.substring(1,c.length);\r\n        }\r\n        if (c.indexOf(nameEQ) === 0) {\r\n          return c.substring(nameEQ.length,c.length);\r\n        }\r\n      }\r\n      return null;\r\n    },\r\n    eraseCookie: function(name) {\r\n      this.createCookie(name, '', -1);\r\n    }\r\n  };\r\n\r\n  $.fn[pluginName] = function(options, params) {\r\n    return this.each(function() {\r\n      var instance = $.data(this, pluginName);\r\n      if (!instance) {\r\n        $.data(this, pluginName, new Plugin(this, options));\r\n      } else if (instance[options]) {\r\n        instance[options](params);\r\n      }\r\n    });\r\n  };\r\n\r\n  $(function() {\r\n    $('[data-' + pluginName + ']')[pluginName]();\r\n  });\r\n\r\n}(jQuery, window));\r\n","/**\r\n *  @name copies\r\n *  @description Click to copy\r\n *  @version 1.0\r\n *  @options\r\n *    option\r\n *  @events\r\n *    click\r\n *  @methods\r\n *    init\r\n *    selectContent\r\n *    destroy\r\n */\r\n;(function($, window, undefined) {\r\n  'use strict';\r\n\r\n  var pluginName = 'copies';\r\n\r\n  function Plugin(element, options) {\r\n    this.element = $(element);\r\n    this.options = $.extend({}, $.fn[pluginName].defaults, this.element.data(), options);\r\n    this.init();\r\n  }\r\n\r\n  Plugin.prototype = {\r\n    init: function() {\r\n      var that = this;\r\n      this.handle = this.element.find(this.options.handle);\r\n      this.copy = this.options.copy;\r\n      this.isAnimating = false;\r\n\r\n      this.handle.off('click.copies').on('click.copies', function() {\r\n        if(!that.isAnimating) {\r\n          that.selectContent($(this).find(that.copy));\r\n        }\r\n      });\r\n    },\r\n    selectContent: function(element) {\r\n      var $temp = $('<input>'),\r\n        that = this,\r\n        value = element.data('copy') || element.text();\r\n\r\n      this.isAnimating = true;\r\n      element.after($temp);\r\n      $temp.val(value);\r\n      $temp.focus();\r\n      document.execCommand('SelectAll');\r\n      document.execCommand('Copy', false, null);\r\n      $('.copied').html(value).show().delay(1000).fadeOut(300, function() {\r\n        that.isAnimating = false;\r\n      });\r\n      $temp.remove();\r\n    },\r\n    destroy: function() {\r\n      $.removeData(this.element[0], pluginName);\r\n    }\r\n  };\r\n\r\n  $.fn[pluginName] = function(options, params) {\r\n    return this.each(function() {\r\n      var instance = $.data(this, pluginName);\r\n      if (!instance) {\r\n        $.data(this, pluginName, new Plugin(this, options));\r\n      } else if (instance[options]) {\r\n        instance[options](params);\r\n      }\r\n    });\r\n  };\r\n\r\n  $.fn[pluginName].defaults = {\r\n    handle: '[data-handler]',\r\n    copy: '[data-copy]'\r\n  };\r\n\r\n  $(function() {\r\n    $('[data-' + pluginName + ']')[pluginName]();\r\n  });\r\n\r\n}(jQuery, window));\r\n","/**\r\n *  @name date\r\n *  @version 1.0\r\n *  @options\r\n *    option\r\n *  @events\r\n *    event\r\n *  @methods\r\n *    init\r\n *    updateValue\r\n *    destroy\r\n */\r\n;(function($, window, undefined) {\r\n  'use strict';\r\n\r\n  var pluginName = 'date';\r\n  var convertToDMY = function(date) {\r\n    var day = date.getDate(),\r\n      month = date.getMonth() + 1,\r\n      year = date.getFullYear();\r\n\r\n    if(day < 10) {day = '0' + day;}\r\n    if(month < 10) {month = '0' + month;}\r\n    return day + '/' + month + '/' + year;\r\n  };\r\n\r\n  function Plugin(element, options) {\r\n    this.element = $(element);\r\n    this.options = $.extend({}, $.fn[pluginName].defaults, this.element.data(), options);\r\n    this.init();\r\n  }\r\n\r\n  Plugin.prototype = {\r\n    init: function() {\r\n      var that = this;\r\n        this.valueContainer = this.element.find(this.options.valueContainer);\r\n        this.inputElm = this.element.find(this.options.inputElm);\r\n\r\n      this.updateValue();\r\n      this.inputElm.off('change.changeValue').on('change.changeValue', function() {\r\n        var idDate = $(this).attr('id');\r\n        that.updateValue();\r\n        if($(this).prop('required')) {\r\n          $(this).closest('form').validate().element('#' + idDate);\r\n        }\r\n      });\r\n    },\r\n    updateValue: function() {\r\n      var date = this.inputElm.val();\r\n      if(date === '') {\r\n        this.valueContainer.text(this.inputElm.attr('placeholder'));\r\n        this.element.removeClass(this.options.selectedCls);\r\n      }\r\n      else {\r\n        this.valueContainer.text(convertToDMY.call(this, new Date(date)));\r\n        this.element.addClass(this.options.selectedCls);\r\n      }\r\n    },\r\n    destroy: function() {\r\n      $.removeData(this.element[0], pluginName);\r\n    }\r\n  };\r\n\r\n  $.fn[pluginName] = function(options, params) {\r\n    return this.each(function() {\r\n      var instance = $.data(this, pluginName);\r\n      if (!instance) {\r\n        $.data(this, pluginName, new Plugin(this, options));\r\n      } else if (instance[options]) {\r\n        instance[options](params);\r\n      }\r\n    });\r\n  };\r\n\r\n  $.fn[pluginName].defaults = {\r\n    valueContainer: 'span',\r\n    inputElm: 'input',\r\n    selectedCls: 'selected'\r\n  };\r\n\r\n  $(function() {\r\n    $('[data-' + pluginName + ']')[pluginName]();\r\n  });\r\n\r\n}(jQuery, window));\r\n","/**\r\n *  @name plugin\r\n *  @description description\r\n *  @version 1.0\r\n *  @options\r\n *    option\r\n *  @events\r\n *    event\r\n *  @methods\r\n *    init\r\n *    publicMethod\r\n *    destroy\r\n */\r\n;(function($, window, undefined) {\r\n  'use strict';\r\n\r\n  var pluginName = 'gmap',\r\n    body = $('body'),\r\n    win = $(window),\r\n    styles = L10n.styles;\r\n\r\n  var setScrollMap = function(isScroll) {\r\n    if (this.vars.map) {\r\n      this.vars.map.setOptions({scrollwheel: isScroll});\r\n    }\r\n  };\r\n\r\n  var checkScrollMap = function() {\r\n    var that = this;\r\n    google.maps.event.addDomListener(document.getElementById(this.options.id), 'click', function() {\r\n      setScrollMap.call(that, true);\r\n    });\r\n    google.maps.event.addDomListener(document.getElementById(this.options.id).childNodes, 'click', function() {\r\n      setScrollMap.call(that, true);\r\n    });\r\n    google.maps.event.addListener(that.vars.map, 'mousedown', function(){\r\n      setScrollMap.call(that, true);\r\n    });\r\n    body.on('mousedown.' + pluginName, function(e) {\r\n      if (!$(e.target).closest('#' + that.options.id).length) {\r\n        setScrollMap.call(that, false);\r\n      }\r\n    });\r\n    win.on('scroll.' + pluginName, function() {\r\n      setScrollMap.call(that, false);\r\n    });\r\n  };\r\n\r\n  var changeZoom = function() {\r\n    var that = this;\r\n    this.vars.map.addListener('zoom_changed', function() {\r\n      that.vars.zoomchanged = that.vars.map.getZoom();\r\n    });\r\n  };\r\n\r\n  var initAutocomplete = function() {\r\n    var that = this;\r\n    var input = document.getElementById(this.options.input);\r\n    if(input) {\r\n      var searchBox = new google.maps.places.SearchBox(input);\r\n      this.vars.map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\r\n\r\n      this.vars.map.addListener('bounds_changed', function() {\r\n        searchBox.setBounds(that.vars.map.getBounds());\r\n      });\r\n\r\n      var markers = [];\r\n      searchBox.addListener('places_changed', function() {\r\n        var places = searchBox.getPlaces();\r\n        var bounds = new google.maps.LatLngBounds();\r\n        var infos;\r\n\r\n        if (places.length === 0) {\r\n          return;\r\n        }\r\n\r\n        markers.forEach(function(marker) {\r\n          marker.setMap(null);\r\n        });\r\n        markers = [];\r\n\r\n        places.forEach(function(place, i) {\r\n          if (!place.geometry) {\r\n            console.log('Returned place contains no geometry');\r\n            return;\r\n          }\r\n          var icon = {\r\n            url: place.icon,\r\n            size: new google.maps.Size(71, 71),\r\n            origin: new google.maps.Point(0, 0),\r\n            anchoPoint: new google.maps.Point(17, 34),\r\n            scaledSize: new google.maps.Size(25, 25)\r\n          };\r\n\r\n          // Create a marker for each place.\r\n          markers.push(new google.maps.Marker({\r\n            map: that.vars.map,\r\n            icon: icon,\r\n            title: place.name,\r\n            position: place.geometry.location\r\n          }));\r\n\r\n          infos = '<strong style=\"display: block; text-align: center;\">' + place.name + '</strong>' + place.formatted_address;\r\n\r\n          google.maps.event.addListener(markers[i], 'click', function() {\r\n            that.setCenter(markers[i]);\r\n            that.showInfoWindow(markers[i], '<div class=\"noscrollbar\">' + infos + '</>');\r\n          });\r\n\r\n          if (place.geometry.viewport) {\r\n            bounds.union(place.geometry.viewport);\r\n          } else {\r\n            bounds.extend(place.geometry.location);\r\n          }\r\n        });\r\n        changeZoom.call(that);\r\n        that.vars.map.fitBounds(bounds);\r\n      });\r\n    }\r\n  };\r\n\r\n  function Plugin(element, options) {\r\n    this.element = $(element);\r\n    this.options = $.extend({}, $.fn[pluginName].defaults, this.element.data(), options, this.element.data(pluginName));\r\n    this.init();\r\n  }\r\n\r\n  Plugin.prototype = {\r\n    init: function() {\r\n      this.vars = {};\r\n      this.vars.marker = [],\r\n      this.vars.locations = window[this.options.locations];\r\n      this.vars.optMap = {\r\n        center: {lat: this.vars.locations[0].lat, lng: this.vars.locations[0].lng},\r\n        zoom: this.options.zoom[0],\r\n        styles: styles,\r\n        mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n        mapTypeControl: false,\r\n        streetViewControl: false,\r\n        zoomControl: true,\r\n        zoomControlOptions: {\r\n          style: google.maps.ZoomControlStyle.DEFAULT,\r\n          position: google.maps.ControlPosition.RIGHT_CENTER\r\n        },\r\n        panControl: false,\r\n        scrollwheel: false,\r\n        //draggable: Modernizr.mobile || Modernizr.tablet ? false : true,\r\n        gestureHandling: 'cooperative'\r\n      };\r\n\r\n      this.initGmap();\r\n    },\r\n    initGmap: function() {\r\n      this.vars.map = new google.maps.Map(document.getElementById(this.options.id), this.vars.optMap);\r\n\r\n      this.setMarkers();\r\n      this.listener();\r\n    },\r\n    listener: function() {\r\n      checkScrollMap.call(this);\r\n      initAutocomplete.call(this);\r\n      this.changeLocation(this.vars.locations, this.options.initValue);\r\n    },\r\n    setMarkers: function() {\r\n      var that = this,\r\n        circle,\r\n        position;\r\n        this.vars.bound = new google.maps.LatLngBounds();\r\n\r\n      this.vars.infowindow = new google.maps.InfoWindow();\r\n      for (var i = 0, n = this.vars.locations.length; i < n; ++i) {\r\n        that.vars.icon = {\r\n          url: that.vars.locations[i].marker || that.options.icon //https://developers.google.com/maps/documentation/javascript/examples/icon-complex\r\n        };\r\n        this.vars.bound.extend(new google.maps.LatLng(that.vars.locations[i].lat, that.vars.locations[i].lng));\r\n        position = new google.maps.LatLng(that.vars.locations[i].lat, that.vars.locations[i].lng);\r\n\r\n        that.vars.marker[i] = new google.maps.Marker({\r\n          position: position,\r\n          title: that.vars.locations[i].name,\r\n          map: that.vars.map,\r\n          icon: that.vars.icon,\r\n          animation: google.maps.Animation.DROP //https://developers.google.com/maps/documentation/javascript/examples/marker-animations\r\n        });\r\n\r\n        google.maps.event.addListener(that.vars.marker[i], 'click', (function(marker, mess) {\r\n          return function() {\r\n            changeZoom.call(that);\r\n            that.setCenter(marker);\r\n            that.showInfoWindow(marker, mess);\r\n            $('#' + that.options.dropdown).val(marker.title);\r\n            $('#' + that.options.dropdown).closest('[data-select]').addClass('selected').find('span').html(marker.title);\r\n          };\r\n        })(that.vars.marker[i], this.vars.locations[i].mess));\r\n\r\n        circle = new google.maps.Circle({\r\n          map: that.vars.map,\r\n          radius: 4000,\r\n          fillColor: '#AA0000',\r\n          strokeWeight: 1\r\n        });\r\n        circle.bindTo('center', that.vars.marker[i], 'position');\r\n      }\r\n      this.boundAllPosition();\r\n    },\r\n    boundAllPosition: function() {\r\n      this.vars.map.setCenter(this.vars.bound.getCenter());\r\n      this.vars.map.fitBounds(this.vars.bound);\r\n    },\r\n    changeLocation: function(locations, initValue) {\r\n      var that = this,\r\n        opt = '';\r\n      for (var i = 0, n = locations.length; i < n; ++i) {\r\n        if(initValue === locations[i].name) {\r\n          opt = '<option value=\"' + locations[i].name + '\" selected=\"selected\">' + locations[i].name + '</option>';\r\n        }\r\n        else {\r\n          opt = '<option value=\"' + locations[i].name + '\">' + locations[i].name + '</option>';\r\n        }\r\n        $('#' + this.options.dropdown).append(opt);\r\n      }\r\n\r\n      $('#' + this.options.dropdown).on('change.' + pluginName, function() {\r\n        var name = $(this).val();\r\n        for (var i = 0, n = that.vars.locations.length; i < n; ++i) {\r\n          if(name === that.vars.locations[i].name) {\r\n            google.maps.event.trigger(that.vars.marker[i], 'click');\r\n          }\r\n        }\r\n        if(!name) {\r\n          that.boundAllPosition();\r\n          that.vars.infowindow.close();\r\n          that.vars.zoomchanged = undefined;\r\n        }\r\n      });//.change();\r\n      google.maps.event.addListenerOnce(this.vars.map, 'idle', function() {\r\n        $('#' + that.options.dropdown).change();\r\n      });\r\n    },\r\n    setCenter: function(marker) {\r\n      var zoomchanged = this.options.zoom[1];\r\n      if(!!this.vars.zoomchanged) {\r\n        zoomchanged = this.vars.zoomchanged;\r\n      }\r\n      this.vars.map.setZoom(zoomchanged);\r\n      this.vars.map.panTo(marker.getPosition());\r\n    },\r\n    showInfoWindow: function(marker, mess) {\r\n      this.vars.infowindow.setContent(mess);\r\n      this.vars.infowindow.open(this.vars.map, marker);\r\n    }\r\n  };\r\n\r\n  $.fn[pluginName] = function(options, params) {\r\n    return this.each(function() {\r\n      var instance = $.data(this, pluginName);\r\n      if (!instance) {\r\n        $.data(this, pluginName, new Plugin(this, options));\r\n      } else if (instance[options]) {\r\n        instance[options](params);\r\n      }\r\n    });\r\n  };\r\n\r\n  $.fn[pluginName].defaults = {\r\n  };\r\n\r\n  $(function() {\r\n    $('[data-' + pluginName + ']')[pluginName]({\r\n      icon: 'images/pink-marker.png'\r\n    });\r\n  });\r\n\r\n}(jQuery, window));\r\n","/**\r\n *  @name number\r\n *  @description description\r\n *  @version 1.0\r\n *  @events\r\n *    change\r\n *    keydown\r\n *  @methods\r\n *    init\r\n */\r\n;(function($, window, undefined) {\r\n  'use strict';\r\n\r\n  var pluginName = 'number';\r\n\r\n  function Plugin(element, options) {\r\n    this.element = $(element);\r\n    this.options = $.extend({}, $.fn[pluginName].defaults, this.element.data(), options);\r\n    this.init();\r\n  }\r\n\r\n  Plugin.prototype = {\r\n    init: function() {\r\n      this.input = this.element.find(this.options.input);\r\n      this.increase = this.element.find(this.options.increase);\r\n      this.decrease = this.element.find(this.options.decrease);\r\n\r\n      this.listener();\r\n    },\r\n    listener: function() {\r\n      var that = this;\r\n      this.handle = this.options[pluginName].handle;\r\n      this.maxLength = this.options[pluginName].maxLength;\r\n      this.input.off('keydown.typeText').on('keydown.typeText', function(e) {\r\n        if(!(\r\n          (e.keyCode > 95 && e.keyCode < 106) ||\r\n          (e.keyCode > 47 && e.keyCode < 58) ||\r\n          e.keyCode === 8 ||\r\n          e.keyCode === 9 ||\r\n          e.keyCode === 13 ||\r\n          e.keyCode === 37 ||\r\n          e.keyCode === 38 ||\r\n          e.keyCode === 39 ||\r\n          e.keyCode === 40 ||\r\n          e.keyCode === 46)) {\r\n          return false;\r\n        }\r\n        if($(this).val().length === that.maxLength) {\r\n          if((e.keyCode > 95 && e.keyCode < 106) || (e.keyCode > 47 && e.keyCode < 58)) {\r\n            return false;\r\n          }\r\n        }\r\n      });\r\n\r\n      this.input.off('keyup.typeText, change.changeValue').on('keyup.typeText, change.changeValue', function() {\r\n        if(that.val !== $(this).val()) {\r\n          that.val = $(this).val();\r\n          that.updateValue(that.val < 1 ? 1 : that.val, that.handle);\r\n        }\r\n      });\r\n\r\n      this.increase.off('click.increase' + pluginName).on('click.increase' + pluginName, function() {\r\n        that.val = that.input.val();\r\n        that.updateValue(++that.val, that.handle);\r\n      });\r\n\r\n      this.decrease.off('click.decrease' + pluginName).on('click.decrease' + pluginName, function() {\r\n        that.val = that.input.val();\r\n        if(that.val > 1) {\r\n          that.updateValue(--that.val, that.handle);\r\n        }\r\n      });\r\n    },\r\n    updateValue: function(value, handle) {\r\n      if(!!handle) {\r\n        $('[data-' + pluginName + ']').filter(function() {\r\n          return $(this).data()[pluginName].options[pluginName].handle === handle;\r\n        }).find(this.options.input).val(value);\r\n      }\r\n    },\r\n    destroy: function() {\r\n      $.removeData(this.element[0], pluginName);\r\n    }\r\n  };\r\n\r\n  $.fn[pluginName] = function(options, params) {\r\n    return this.each(function() {\r\n      var instance = $.data(this, pluginName);\r\n      if (!instance) {\r\n        $.data(this, pluginName, new Plugin(this, options));\r\n      } else if (instance[options]) {\r\n        instance[options](params);\r\n      }\r\n    });\r\n  };\r\n\r\n  $.fn[pluginName].defaults = {\r\n    input: '[data-input]',\r\n    increase: '[data-increase]',\r\n    decrease: '[data-decrease]'\r\n  };\r\n\r\n  $(function() {\r\n    $('[data-' + pluginName + ']')[pluginName]();\r\n  });\r\n\r\n}(jQuery, window));\r\n","/**\r\n *  @name pinchzoom\r\n *  @description description\r\n *  @version 1.0\r\n *  @options\r\n *    option\r\n *  @events\r\n *    event\r\n *  @methods\r\n *    init\r\n *    publicMethod\r\n *    destroy\r\n */\r\n;(function($, window, undefined) {\r\n  'use strict';\r\n\r\n  var pluginName = 'pinchzoom',\r\n    timeResize,\r\n    win = $(window),\r\n    resize = ('onorientationchange' in window) ? 'orientationchange.resize' + pluginName : 'resize.resize' + pluginName;\r\n\r\n  function Plugin(element, options) {\r\n    this.element = $(element);\r\n    this.options = $.extend({}, $.fn[pluginName].defaults, this.element.data(), options, this.element.data(pluginName));\r\n    this.init();\r\n  }\r\n\r\n  Plugin.prototype = {\r\n    init: function() {\r\n      this.handle = this.element.find(this.options.handle);\r\n      this.closezoom = this.element.find(this.options.closezoom);\r\n      this.img = this.options.img;\r\n      this.initialize(this.options.img);\r\n      this.listener();\r\n    },\r\n    listener: function() {\r\n      var that = this;\r\n      this.closezoom.off('mousedown.close' + pluginName).on('mousedown.close' + pluginName, function() {\r\n        that.destroy();\r\n      });\r\n\r\n      win.on(resize, function() {\r\n        if(timeResize) {\r\n          clearTimeout(timeResize);\r\n        }\r\n        timeResize = setTimeout(function() {\r\n          $('[data-' + pluginName + ']').each(function() {\r\n            if($(this).css('opacity') !== '0') {\r\n              $(this)[pluginName]('destroy');\r\n              $(this)[pluginName]('initialize');\r\n            }\r\n          });\r\n        }, 300);\r\n      });\r\n    },\r\n    initialize: function(imgSrc) {\r\n      if(this.img) {\r\n        this.img = (imgSrc && this.img !== imgSrc) ? imgSrc : this.img;\r\n      }\r\n      else {\r\n        this.img = imgSrc;\r\n      }\r\n      if(!!this.img) {\r\n        if(this.options.initUnder) {\r\n          if(win.width() < this.options.initUnder) {\r\n            this.element.addClass('showZoomContainer');\r\n            this.initSmoothZoom();\r\n          }\r\n          else {\r\n            this.destroy();\r\n          }\r\n        }\r\n        else if (this.options.initUpper) {\r\n          if(win.width() > this.options.initUpper) {\r\n            this.element.addClass('showZoomContainer');\r\n            this.initSmoothZoom();\r\n          }\r\n          else {\r\n            this.destroy();\r\n          }\r\n        }\r\n        else {\r\n          this.element.addClass('showZoomContainer');\r\n          this.initSmoothZoom();\r\n        }\r\n      }\r\n    },\r\n    initSmoothZoom: function() {\r\n      var that = this;\r\n\r\n      this.handle.smoothZoom({\r\n        image_url: that.img,\r\n        initial_ZOOM: 500,\r\n        zoom_BUTTONS_SHOW: false,\r\n        pan_BUTTONS_SHOW: false,\r\n        border_SIZE: 0,\r\n        responsive: true,\r\n        width: '100%',\r\n        height: '100%'\r\n      });\r\n    },\r\n    destroy: function() {\r\n      this.handle.smoothZoom('destroy');\r\n      this.handle.removeAttr('style');\r\n      this.handle.removeAttr('class');\r\n      this.element.removeClass('showZoomContainer');\r\n    }\r\n  };\r\n\r\n  $.fn[pluginName] = function(options, params) {\r\n    return this.each(function() {\r\n      var instance = $.data(this, pluginName);\r\n      if (!instance) {\r\n        $.data(this, pluginName, new Plugin(this, options));\r\n      } else if (instance[options]) {\r\n        instance[options](params);\r\n      }\r\n    });\r\n  };\r\n\r\n  $.fn[pluginName].defaults = {\r\n    handle: '[data-handle]',\r\n    closezoom: '[data-closezoom]'\r\n  };\r\n\r\n  $(function() {\r\n    $('[data-' + pluginName + ']')[pluginName]();\r\n  });\r\n\r\n}(jQuery, window));\r\n","/**\r\n *  @name popup\r\n *  @description Use fancybox\r\n *  @version 1.0\r\n *  @options\r\n *    option\r\n *  @events\r\n *    event\r\n *  @methods\r\n *    init\r\n *    publicMethod\r\n *    destroy\r\n */\r\n;(function($, window, undefined) {\r\n  'use strict';\r\n\r\n  var pluginName = 'popup';\r\n\r\n  function Plugin(element, options) {\r\n    this.element = $(element);\r\n    this.options = $.extend({}, $.fn[pluginName].defaults, this.element.data(), options, this.element.data(pluginName));\r\n    this.init();\r\n  }\r\n\r\n  Plugin.prototype = {\r\n    init: function() {\r\n      this.vars = {\r\n        handle: $(this.options.handle)\r\n      };\r\n\r\n      this.defineOption();\r\n      this.listener();\r\n    },\r\n    defineOption: function() {\r\n      this.vars.config = {\r\n        type: this.options.type ? this.options.type : 'image',\r\n        autoFocus: false,\r\n        backFocus: false,\r\n        trapFocus: false,\r\n        transitionEffect: 'fade',\r\n        caption: $.noop,\r\n        afterLoad: this.afterLoad,\r\n        beforeLoad: this.beforeLoad,\r\n        beforeShow: this.beforeShow,\r\n        beforeClose: this.beforeClose\r\n      };\r\n    },\r\n    listener: function() {\r\n      var that = this;\r\n      this.vars.handle.off('click.open' + pluginName).on('click.open' + pluginName, function() {\r\n        $.fancybox.open(that.vars.handle, that.vars.config, that.vars.handle.index(this));\r\n        return false;\r\n      });\r\n    },\r\n    beforeShow: function() {\r\n    },\r\n    beforeLoad: function() {\r\n    },\r\n    afterLoad: function() {\r\n      $('[data-cslider]', '.fancybox-container').cslider('init');\r\n    },\r\n    beforeClose: function() {\r\n    },\r\n    closePopup: function() {\r\n      $.fancybox.close('all');\r\n    }\r\n  };\r\n\r\n  $.fn[pluginName] = function(options, params) {\r\n    return this.each(function() {\r\n      var instance = $.data(this, pluginName);\r\n      if (!instance) {\r\n        $.data(this, pluginName, new Plugin(this, options));\r\n      } else if (instance[options]) {\r\n        instance[options](params);\r\n      }\r\n    });\r\n  };\r\n\r\n  $.fn[pluginName].defaults = {};\r\n\r\n  $(function() {\r\n    $('[data-' + pluginName + ']')[pluginName]();\r\n  });\r\n\r\n}(jQuery, window));\r\n","/**\r\n *  @name sameheight\r\n *  @description Equal height of blocks on row\r\n *  @version 1.0\r\n *  @options\r\n *    parent: '[data-parent]'\r\n *    child: '[data-child]'\r\n *  @events\r\n *    Réize\r\n *  @methods\r\n *    init\r\n *    initialize\r\n *    checkImgLoad\r\n *    setSameHeight\r\n *    destroy\r\n */\r\n;(function($, window, undefined) {\r\n  'use strict';\r\n\r\n  var pluginName = 'sameheight',\r\n    win = $(window),\r\n    resize = ('onorientationchange' in window) ? 'orientationchange.resize' + pluginName : 'resize.resize' + pluginName;\r\n\r\n  function Plugin(element, options) {\r\n    this.element = $(element);\r\n    this.options = $.extend({}, $.fn[pluginName].defaults, this.element.data(), options);\r\n    this.init();\r\n  }\r\n\r\n  Plugin.prototype = {\r\n    init: function() {\r\n      this.parent = this.element.find(this.options.parent);\r\n      this.childs = this.element.find(this.options.child);\r\n      if(!this.parent.length) {return;}\r\n      this.initialize();\r\n      win.off(resize).on(resize, function() {\r\n        $('[data-' + pluginName + ']')[pluginName]('initialize');\r\n      });\r\n    },\r\n    initialize: function() {\r\n      if(this.element.find('img').length) {\r\n        this.checkImgLoad();\r\n      }\r\n      else {\r\n        this.setSameHeight();\r\n      }\r\n    },\r\n    checkImgLoad: function() {\r\n      var that = this,\r\n        imagesLoaded = 0,\r\n        totalImages = this.element.find('img').length;\r\n\r\n      this.element.find('img').each(function() {\r\n        var fakeSrc = $(this).attr('src');\r\n\r\n        $('<img />')\r\n          .attr('src', fakeSrc).css('display', 'none')\r\n          .on('load.' + pluginName, function() {\r\n            ++imagesLoaded;\r\n            if (imagesLoaded === totalImages) {\r\n              $.isFunction(that.setSameHeight) && that.setSameHeight();\r\n            }\r\n          })\r\n          .on('error.' + pluginName, function() {\r\n            ++imagesLoaded;\r\n            if (imagesLoaded === totalImages) {\r\n              $.isFunction(that.setSameHeight) && that.setSameHeight();\r\n            }\r\n          });\r\n      });\r\n    },\r\n    setSameHeight: function() {\r\n      var perRow = Math.floor(this.element.width() / this.parent.width());\r\n\r\n      this.parent.css('height', 'auto');\r\n      this.childs.css('height', 'auto');\r\n\r\n      if(perRow > 1) {\r\n        for(var i = 0, n = this.parent.length; i < n; i += perRow) {\r\n          var itemPerRow = this.parent.slice(i, i + perRow),\r\n            totalPerRow = itemPerRow.length,\r\n            child = '',\r\n            maxHeight = 0,\r\n            idx = 0,\r\n            obj = {};\r\n\r\n          itemPerRow.each(function(index) {\r\n            idx = index;\r\n            $(this).find('[data-child]').each(function() {\r\n              child = $(this).attr('data-child');\r\n              if(index % totalPerRow === 0 || obj[child] === undefined) {\r\n                obj[child] = 0;\r\n              }\r\n              obj[child] = Math.max(obj[child], $(this).outerHeight());\r\n            });\r\n          });\r\n\r\n          if(idx === totalPerRow - 1) {\r\n            itemPerRow.each(function() {\r\n              for (var key in obj) {\r\n                $(this).find('[data-child=\"' + key + '\"]').css('height', obj[key]);\r\n              }\r\n              maxHeight = Math.max(maxHeight, $(this).outerHeight());\r\n            });\r\n\r\n            if(this.options[pluginName] !== 'no4parent') {\r\n              itemPerRow.css('height', maxHeight);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    destroy: function() {\r\n      this.parent.css('height', 'auto');\r\n      this.childs.css('height', 'auto');\r\n      win.off(resize);\r\n      $.removeData(this.element[0], pluginName);\r\n    }\r\n  };\r\n\r\n  $.fn[pluginName] = function(options, params) {\r\n    return this.each(function() {\r\n      var instance = $.data(this, pluginName);\r\n      if (!instance) {\r\n        $.data(this, pluginName, new Plugin(this, options));\r\n      } else if (instance[options]) {\r\n        instance[options](params);\r\n      }\r\n    });\r\n  };\r\n\r\n  $.fn[pluginName].defaults = {\r\n    parent: '[data-parent]',\r\n    child: '[data-child]'\r\n  };\r\n\r\n  $(function() {\r\n    $('[data-' + pluginName + ']')[pluginName]();\r\n  });\r\n\r\n}(jQuery, window));\r\n","/**\r\n *  @name scrollbar\r\n *  @description description\r\n *  @version 1.0\r\n *  @options\r\n *    option\r\n *  @events\r\n *    event\r\n *  @methods\r\n *    init\r\n *    initialized\r\n *    resizeEvent\r\n *    destroy\r\n */\r\n;(function($, window, undefined) {\r\n  'use strict';\r\n\r\n  var pluginName = 'scrollbar',\r\n    isTouch = 'ontouchstart' in document.documentElement;\r\n\r\n  function Plugin(element, options) {\r\n    this.element = $(element);\r\n    this.options = $.extend({}, $.fn[pluginName].defaults, this.element.data(), options, this.element.data(pluginName));\r\n    this.init();\r\n  }\r\n\r\n  Plugin.prototype = {\r\n    init: function() {\r\n      var that = this;\r\n        this.vars = {\r\n          theme: that.options.theme || 'dark',\r\n          axis: that.options.axis || 'y',\r\n          autoHideScrollbar: that.options.autoHideScrollbar || false,\r\n          scrollAmount: that.options.scrollAmount || 'auto'\r\n        };\r\n\r\n      if(!isTouch) {\r\n        this.defineOption();\r\n      }\r\n    },\r\n    defineOption: function() {\r\n      var that = this;\r\n      this.option = {\r\n        theme: this.vars.theme,\r\n        axis: this.vars.axis,\r\n        autoHideScrollbar: this.vars.autoHideScrollbar,\r\n        autoExpandScrollbar: true,\r\n        mouseWheel: {\r\n          scrollAmount: this.vars.scrollAmount\r\n        },\r\n        callbacks: {\r\n          onCreate: this.onCreate(that.element),\r\n          onUpdate: this.onUpdate(that.element)\r\n        }\r\n      };\r\n\r\n      if(!!this.options.scrollAmount) {\r\n        this.option = $.extend({}, this.option, {\r\n          snapAmount: this.vars.scrollAmount\r\n        });\r\n      }\r\n\r\n      if(this.options.scrollButtons) {\r\n        this.option = $.extend({}, this.option, {\r\n          scrollButtons: {\r\n            enable: true,\r\n            scrollType: 'stepped'\r\n          }\r\n        });\r\n      }\r\n\r\n      if(this.options.autoHorizontal) {\r\n        this.option = $.extend({}, this.option, {\r\n          advanced: {\r\n            autoExpandHorizontalScroll: true\r\n          }\r\n        });\r\n      }\r\n\r\n      // Call mCustomScrollbar\r\n      this.initialized(this.option);\r\n    },\r\n    initialized: function(option) {\r\n      this.element.mCustomScrollbar(option);\r\n    },\r\n    onCreate: function() {\r\n      console.log('onCreate');\r\n    },\r\n    onUpdate: function() {\r\n      console.log('onUpdate');\r\n    },\r\n    destroy: function() {\r\n      this.element.mCustomScrollbar('destroy');\r\n      $.removeData(this.element[0], pluginName);\r\n    }\r\n  };\r\n\r\n  $.fn[pluginName] = function(options, params) {\r\n    return this.each(function() {\r\n      var instance = $.data(this, pluginName);\r\n      if (!instance) {\r\n        $.data(this, pluginName, new Plugin(this, options));\r\n      } else if (instance[options]) {\r\n        instance[options](params);\r\n      }\r\n    });\r\n  };\r\n\r\n  $.fn[pluginName].defaults = {};\r\n\r\n  $(function() {\r\n    $('[data-' + pluginName + ']')[pluginName]();\r\n  });\r\n\r\n}(jQuery, window));\r\n","/**\r\n *  @name scrollto\r\n *  @description description\r\n *  @version 1.0\r\n *  @options\r\n *    option\r\n *  @events\r\n *    event\r\n *  @methods\r\n *    init\r\n *    publicMethod\r\n *    destroy\r\n */\r\n;(function($, window, undefined) {\r\n  'use strict';\r\n\r\n  var pluginName = 'scrollto',\r\n    win = $(window);\r\n\r\n  function Plugin(element, options) {\r\n    this.element = $(element);\r\n    this.options = $.extend({}, $.fn[pluginName].defaults, this.element.data(), options, this.element.data(pluginName));\r\n    this.init();\r\n  }\r\n\r\n  Plugin.prototype = {\r\n    init: function() {\r\n      var that = this,\r\n        el = this.element,\r\n        destination = this.options.handle,\r\n        initUnder = this.options.initUnder;\r\n\r\n      this.toggleShow();\r\n      win.off('scroll.' + pluginName).on('scroll.' + pluginName, function() {\r\n        that.toggleShow();\r\n      });\r\n      el.off('click.' + pluginName).on('click.' + pluginName, function(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if(win.width() < initUnder && $(destination).length) {\r\n          that.scrollTo(destination);\r\n        }\r\n      });\r\n    },\r\n    toggleShow: function() {\r\n      if(this.options[pluginName].handle === 'body') {\r\n        if(win.scrollTop() > 500) {\r\n          this.element.fadeIn('slow');\r\n        }\r\n        else {\r\n          this.element.fadeOut('slow');\r\n        }\r\n      }\r\n    },\r\n    scrollTo: function(elm) {\r\n      var that = this,\r\n        scrollTo = !!$(elm).length ? $(elm).offset().top : 0;\r\n\r\n      $('html, body').animate({\r\n        scrollTop: scrollTo\r\n      }, that.options.duration, 'easeOutCubic'); // jquery.easing.1.3.js\r\n    },\r\n    destroy: function() {\r\n      this.element.off('click.' + pluginName);\r\n      $.removeData(this.element[0], pluginName);\r\n    }\r\n  };\r\n\r\n  $.fn[pluginName] = function(options, params) {\r\n    return this.each(function() {\r\n      var instance = $.data(this, pluginName);\r\n      if (!instance) {\r\n        $.data(this, pluginName, new Plugin(this, options));\r\n      } else if (instance[options]) {\r\n        instance[options](params);\r\n      }\r\n    });\r\n  };\r\n\r\n  $.fn[pluginName].defaults = {\r\n    duration: 600,\r\n    initUnder: 9999\r\n  };\r\n\r\n  $(function() {\r\n    $('[data-' + pluginName + ']')[pluginName]();\r\n  });\r\n\r\n}(jQuery, window));\r\n","/**\r\n *  @name select\r\n *  @version 1.0\r\n *  @options\r\n *    option\r\n *  @events\r\n *    event\r\n *  @methods\r\n *    init\r\n *    updateValue\r\n *    destroy\r\n */\r\n;(function($, window, undefined) {\r\n  'use strict';\r\n\r\n  var pluginName = 'select';\r\n\r\n  function Plugin(element, options) {\r\n    this.element = $(element);\r\n    this.options = $.extend({}, $.fn[pluginName].defaults, this.element.data(), options);\r\n    this.init();\r\n  }\r\n\r\n  Plugin.prototype = {\r\n    init: function() {\r\n      var that = this;\r\n        this.valueContainer = this.element.find(this.options.valueContainer);\r\n        this.selectElm = this.element.find(this.options.selectElm);\r\n\r\n      this.updateValue();\r\n      this.selectElm.off('change.changeValue').on('change.changeValue', function() {\r\n        var idSelectbox = $(this).attr('id');\r\n        that.updateValue();\r\n        if($(this).prop('required') && $(this).is('[aria-describedby]')) {\r\n          $(this).closest('form').validate().element('#' + idSelectbox);\r\n        }\r\n      });\r\n    },\r\n    updateValue: function() {\r\n      var getValue = this.selectElm.find('option:selected').text();\r\n\r\n      this.valueContainer.text(getValue);\r\n      if(this.selectElm.val() !== '') {\r\n        this.element.addClass(this.options.selectedCls);\r\n      }\r\n      else {\r\n        this.element.removeClass(this.options.selectedCls);\r\n      }\r\n    },\r\n    destroy: function() {\r\n      this.fileInput.off('click.' + pluginName);\r\n      $.removeData(this.element[0], pluginName);\r\n    }\r\n  };\r\n\r\n  $.fn[pluginName] = function(options, params) {\r\n    return this.each(function() {\r\n      var instance = $.data(this, pluginName);\r\n      if (!instance) {\r\n        $.data(this, pluginName, new Plugin(this, options));\r\n      } else if (instance[options]) {\r\n        instance[options](params);\r\n      }\r\n    });\r\n  };\r\n\r\n  $.fn[pluginName].defaults = {\r\n    valueContainer: 'span',\r\n    selectElm: 'select',\r\n    selectedCls: 'selected'\r\n  };\r\n\r\n  $(function() {\r\n    $('[data-' + pluginName + ']')[pluginName]();\r\n  });\r\n\r\n}(jQuery, window));\r\n","/**\r\n *  @name slidemenu\r\n *  @version 1.0\r\n *  @options\r\n *    option\r\n *  @events\r\n *    event\r\n *  @methods\r\n *    init\r\n *    destroy\r\n */\r\n;(function($, window, undefined) {\r\n  'use strict';\r\n\r\n  var pluginName = 'slidemenu',\r\n    win = $(window),\r\n    userAgent = navigator.userAgent,\r\n    isDevice = /IEMobile|Windows Phone|Lumia|iPhone|iP[oa]d|Android|BlackBerry|PlayBook|BB10|Mobile Safari|webOS|Mobile|Tablet|Opera Mini|\\bCrMo\\/|Opera Mobi/i.test(userAgent) ? 1 : 0;\r\n\r\n  function Plugin(element, options) {\r\n    this.element = $(element);\r\n    this.options = $.extend({}, $.fn[pluginName].defaults, this.element.data(), options);\r\n    this.init();\r\n  }\r\n\r\n  Plugin.prototype = {\r\n    init: function() {\r\n      this.vars = {\r\n        isAnimating: false,\r\n        isClose: true,\r\n        handler: this.element.find(this.options.handler),\r\n        mainContainer: this.element.find(this.options.mainContainer),\r\n        header: this.element.find(this.options.header),\r\n        inner: $(this.options.mainContainer).find(this.options.inner),\r\n        lNav: this.element.find(this.options.lNav),\r\n        rNav: this.element.find(this.options.rNav),\r\n        dummyLayer: this.element.find(this.options.dummyLayer),\r\n        leftNavCls: this.options.leftNavCls,\r\n        rightNavCls: this.options.rightNavCls,\r\n        duration: this.options.duration,\r\n        sizePull: this.options.sizePull,\r\n        sizePush: this.options.sizePush,\r\n        topInner: 0\r\n      };\r\n      this.listener();\r\n    },\r\n    listener: function() {\r\n      var that = this;\r\n\r\n      if(this.options[pluginName].headerFixedOnFocus) {\r\n        this.handleInputFocusAndBlur();\r\n      }\r\n\r\n      this.vars.handler.off('click.toggle' + pluginName).on('click.toggle' + pluginName, function() {\r\n        if(!that.vars.isAnimating) {\r\n          that.vars.openingCls = $(this).data('nav');\r\n          that.vars.isAnimating = true;\r\n          if(that.vars.isClose) {\r\n            that.openMenu(that.vars.openingCls);\r\n          }\r\n          else {\r\n            that.closeMenu(that.vars.openingCls);\r\n          }\r\n\r\n          // dummyLayer Event\r\n          that.vars.dummyLayer.off('touchstart.' + pluginName).on('touchstart.' + pluginName, function() {\r\n            that.closeMenu(that.vars.openingCls);\r\n          });\r\n        }\r\n      });\r\n    },\r\n    openMenu: function(openingCls) {\r\n      var that = this;\r\n\r\n      if($.isFunction(that.options.beforeOpen)) {that.options.beforeOpen();}\r\n      this.vars.topInner = win.scrollTop();\r\n      this.vars.inner.css('top', -(this.vars.topInner - this.vars.header.height()));\r\n      $('html').addClass(this.vars.openingCls);\r\n      that.vars.dummyLayer.fadeIn(that.vars.duration);\r\n\r\n      switch(openingCls) {\r\n        case this.vars.leftNavCls:\r\n          //Slide Hide Main Container\r\n          this.hideMainContainer('100%', this.vars.sizePush);\r\n\r\n          //Slide Open Left Navigation\r\n          this.vars.lNav.animate({\r\n            left: '0%',\r\n            right: '0%',\r\n            opacity: 1,\r\n            marginRight: this.vars.sizePull\r\n          }, this.vars.duration);\r\n          break;\r\n\r\n        case this.vars.rightNavCls:\r\n          //Slide Hide Main Container\r\n          this.hideMainContainer('-100%', this.vars.sizePull);\r\n\r\n          //Slide Open Right Navigation\r\n          this.vars.rNav.animate({\r\n            left: '0%',\r\n            right: '0%',\r\n            opacity: 1,\r\n            marginLeft: this.vars.sizePull\r\n          }, this.vars.duration);\r\n          break;\r\n        default:\r\n      }\r\n\r\n      this.vars.dummyLayer.on('touchstart.' + pluginName + ' click.' + pluginName, function() {\r\n        that.closeMenu(openingCls);\r\n      });\r\n    },\r\n    closeMenu: function(openingCls) {\r\n      var that = this;\r\n      that.vars.dummyLayer.fadeOut(that.vars.duration);\r\n\r\n      // Show Main Container\r\n      this.showMainContainer();\r\n      switch(openingCls) {\r\n        case this.vars.leftNavCls:\r\n          //Slide Close Left Navigation\r\n          this.vars.lNav.animate({\r\n            left: '-100%',\r\n            right: '100%',\r\n            opacity: 0.5,\r\n            marginRight: 0\r\n          }, {\r\n            duration: this.vars.duration,\r\n            complete: function() {\r\n              $(this).removeAttr('style');\r\n            }\r\n          });\r\n          break;\r\n        case this.vars.rightNavCls:\r\n          //Slide Close Right Navigation\r\n          this.vars.rNav.animate({\r\n            left: '100%',\r\n            right: '-100%',\r\n            opacity: 0.5,\r\n            marginLeft: 0\r\n          }, {\r\n            duration: this.vars.duration,\r\n            complete: function() {\r\n              $(this).removeAttr('style');\r\n            }\r\n          });\r\n          break;\r\n        default:\r\n      }\r\n\r\n      that.vars.dummyLayer.off('touchstart.' + pluginName + ' click.' + pluginName);\r\n    },\r\n    hideMainContainer: function(leftValue, marginLeft) {\r\n      var that = this;\r\n      this.vars.mainContainer.animate({\r\n        left: leftValue,\r\n        marginLeft: marginLeft\r\n      },\r\n      {\r\n        duration: that.vars.duration,\r\n        complete: function() {\r\n          that.afterAnimate(false);\r\n        }\r\n      });\r\n    },\r\n    showMainContainer: function() {\r\n      var that = this;\r\n      this.vars.mainContainer.animate({\r\n        left: '0%',\r\n        marginLeft: '0%'\r\n      },\r\n      {\r\n        duration: this.vars.duration,\r\n        complete: function() {\r\n          $('html').removeClass(that.vars.openingCls);\r\n          $(this).removeAttr('style');\r\n          that.vars.inner.removeAttr('style');\r\n          window.scrollBy(0, that.vars.topInner);\r\n          that.afterAnimate(true);\r\n          if($.isFunction(that.options.afterClose)) {that.options.afterClose();}\r\n        }\r\n      });\r\n    },\r\n    afterAnimate: function(isClose) {\r\n      this.vars.isClose = isClose;\r\n      this.vars.isAnimating = false;\r\n    },\r\n    handleInputFocusAndBlur: function() {\r\n      if(isDevice) {\r\n      // if(Detectizr.device.type === 'tablet' || Detectizr.device.type === 'mobile') {\r\n        var that = this, focusing;\r\n\r\n        $('input[type=\"text\"], input[type=\"number\"], input[type=\"tel\"], input[type=\"email\"], input[type=\"search\"], select, textarea').off('focus.' + pluginName).on('focus.' + pluginName, function() {\r\n          that.vars.header.find('.header-inner').css('position', 'relative');\r\n          that.vars.header.css({\r\n            //'position': 'absolute',\r\n            'top': $(document).scrollTop()\r\n          });\r\n          $('html').addClass('inputFocusing');\r\n          focusing = true;\r\n        });\r\n\r\n        $('input[type=\"text\"], input[type=\"number\"], input[type=\"tel\"], input[type=\"email\"], input[type=\"search\"], select, textarea').off('blur.' + pluginName).on('blur.' + pluginName, function() {\r\n          that.vars.header.find('.header-inner').removeAttr('style');\r\n          that.vars.header.removeAttr('style');\r\n          $('html').removeClass('inputFocusing');\r\n          focusing = false;\r\n        });\r\n\r\n        win.off('scroll.scroll' + pluginName).on('scroll.scroll' + pluginName, function() {\r\n          if (focusing) {\r\n            that.vars.header.css({\r\n              'opacity': 0,\r\n              'top': $(document).scrollTop()\r\n            });\r\n          }\r\n          clearTimeout($.data( this, 'scrollCheck' ));\r\n          $.data(this, 'scrollCheck', setTimeout(function() {\r\n            if (focusing) {\r\n              that.vars.header.css('opacity', 1);\r\n              that.vars.lNav.css('opacity', 1);\r\n            }\r\n          }, 250));\r\n        });\r\n      }\r\n    },\r\n    destroy: function() {\r\n      $('html').removeClass(this.vars.openingCls);\r\n      this.vars.mainContainer.removeAttr('style');\r\n      this.vars.dummyLayer.removeAttr('style');\r\n      this.vars.inner.removeAttr('style');\r\n      this.vars.handler.off('click.toggle' + pluginName);\r\n      $('input, select, textarea').off('focus.' + pluginName);\r\n      $('input, select, textarea').off('blur.' + pluginName);\r\n      $(window).off('scroll.' + pluginName);\r\n      $.removeData(this.element[0], pluginName);\r\n    }\r\n  };\r\n\r\n  $.fn[pluginName] = function(options, params) {\r\n    return this.each(function() {\r\n      var instance = $.data(this, pluginName);\r\n      if (!instance) {\r\n        $.data(this, pluginName, new Plugin(this, options));\r\n      } else if (instance[options]) {\r\n        instance[options](params);\r\n      }\r\n    });\r\n  };\r\n\r\n  $.fn[pluginName].defaults = {\r\n    handler: '[data-nav]',\r\n    mainContainer: '.main-container',\r\n    header: '.header',\r\n    inner: '.inner',\r\n    lNav: '.navigation',\r\n    rNav: '.right-navigation',\r\n    dummyLayer: '.dummy-layer',\r\n    leftNavCls: 'open-left-nav',\r\n    rightNavCls: 'open-right-nav',\r\n    duration: 200,\r\n    sizePull: '25%',\r\n    sizePush: '-25%',\r\n    beforeOpen: $.noop,\r\n    afterClose: $.noop\r\n  };\r\n\r\n  $(function() {\r\n    $('[data-' + pluginName + ']')[pluginName]();\r\n  });\r\n\r\n}(jQuery, window));\r\n","/**\r\n *  @name slider\r\n *  @version 1.0\r\n *  @events\r\n *    afterChange - Event of Slick slider\r\n *  @methods\r\n *    init\r\n *    initialize\r\n *    checkImgLoad\r\n *    initSlider\r\n *    setPositionArrows\r\n *    slickPause\r\n *    slickPlay\r\n *    destroy\r\n */\r\n;(function($, window, undefined) {\r\n  'use strict';\r\n\r\n  var pluginName = 'cslider',\r\n    timeResize,\r\n    win = $(window),\r\n    resize = ('onorientationchange' in window) ? 'orientationchange.resize' + pluginName : 'resize.resize' + pluginName,\r\n    TypeSliders = {\r\n      SINGLE: 'single',\r\n      CAROUSEL: 'carousel',\r\n      CENTERMODE: 'centerMode',\r\n      VIDEOSLIDE: 'videoSlide',\r\n      VARIABLEWIDTH: 'variableWidth',\r\n      VERTICAL: 'vertical',\r\n      SYNCING: 'syncing'\r\n    },\r\n    States = {\r\n      BEFORECHANGE: 'beforechange',\r\n      AFTERCHANGE: 'afterchange',\r\n      RESIZE: 'resize'\r\n    };\r\n\r\n  function Plugin(element, options) {\r\n    this.element = $(element);\r\n    this.options = $.extend({}, $.fn[pluginName].defaults, this.element.data(), options, this.element.data(pluginName));\r\n    this.init();\r\n  }\r\n\r\n  Plugin.prototype = {\r\n    init: function() {\r\n      this.handle = this.element.find(this.options.handle);\r\n      this.smoothZoom = this.element.find(this.options.smoothZoom);\r\n      if(this.handle.is(':visible')) {\r\n        if(this.options.initUnder) {\r\n          if(win.width() <= this.options.initUnder) {\r\n            this.handle.removeClass('no-slide');\r\n            this.initialize();\r\n          }\r\n          else {\r\n            this.handle.addClass('no-slide');\r\n          }\r\n        }\r\n        else {\r\n          this.initialize();\r\n        }\r\n\r\n        win.on(resize, function() {\r\n          if(timeResize) {\r\n            clearTimeout(timeResize);\r\n          }\r\n          timeResize = setTimeout(function() {\r\n            $('[data-' + pluginName + ']').each(function() {\r\n              if($(this).data()[pluginName].options[pluginName].hasZoom) {\r\n                $(this)[pluginName]('zoomEffect', States.RESIZE);\r\n              }\r\n              if($('.slick', this).is(':visible')) {\r\n                if($(this).data()[pluginName].options[pluginName].initUnder) {\r\n                  if(win.width() < $(this).data()[pluginName].options[pluginName].initUnder) {\r\n                    $('.slick', this).removeClass('no-slide');\r\n                    if(!$('.slick', this).hasClass('slick-initialized')) {\r\n                      $(this)[pluginName]('initialize');\r\n                    }\r\n                    else {\r\n                      $(this)[pluginName]('setPositionArrows');\r\n                    }\r\n                  }\r\n                  else if($('.slick', this).hasClass('slick-initialized')) {\r\n                    $('.slick', this).addClass('no-slide');\r\n                    $(this)[pluginName]('destroy');\r\n                  }\r\n                }\r\n                else {\r\n                  $(this)[pluginName]('setPositionArrows');\r\n                  $(this)[pluginName]('slickNoSlide');\r\n\r\n                  // Just only have on Resize event.\r\n                  if($('.slick', this).hasClass('no-slide')) {\r\n                    $(this)[pluginName]('destroy');\r\n                    $(this)[pluginName]('init');\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          }, 600);\r\n        });\r\n      }\r\n    },\r\n    initialize: function() {\r\n      if(this.element.find('img').length) {\r\n        this.checkImgLoad();\r\n      }\r\n      else {\r\n        this.initSlider();\r\n      }\r\n    },\r\n    checkImgLoad: function() {\r\n      var that = this,\r\n        fakeSrc = this.element.find('img:visible').first().attr('src');\r\n\r\n      $('<img />')\r\n        .attr('src', fakeSrc).css('display', 'none')\r\n        .on('load.' + pluginName, function() {\r\n          that.initSlider();\r\n        })\r\n        .on('error.' + pluginName, function() {\r\n          that.initSlider();\r\n        });\r\n    },\r\n    initSlider: function() {\r\n      var that = this,\r\n        option,\r\n        navFor = {};\r\n\r\n      this.handle.on('init.' + pluginName, function(event, slick) {\r\n        that.onInitSlick(event, slick);\r\n      });\r\n\r\n      switch(this.options.type) {\r\n        case TypeSliders.SINGLE:\r\n          option = this.options.singleSlider;\r\n          break;\r\n        case TypeSliders.CAROUSEL:\r\n          option = this.options.carousel;\r\n          break;\r\n        case TypeSliders.CENTERMODE:\r\n          option = this.options.centerMode;\r\n          break;\r\n        case TypeSliders.VIDEOSLIDE:\r\n          option = this.options.videoSlide;\r\n          break;\r\n        case TypeSliders.VARIABLEWIDTH:\r\n          option = $.extend(this.options.variableWidth, {\r\n            slidesToShow: that.element.find('.item').length - 1\r\n          });\r\n          break;\r\n        case TypeSliders.VERTICAL:\r\n          option = this.options.vertical;\r\n          break;\r\n        case TypeSliders.SYNCING:\r\n          if(this.options.view) {\r\n            navFor.asNavFor = this.options.navFor;\r\n            option = $.extend(this.options.sycingView, navFor);\r\n          }\r\n          else {\r\n            navFor.asNavFor = this.options.navFor;\r\n            option = $.extend(this.options.sycingThumb, navFor);\r\n          }\r\n          break;\r\n        default:\r\n          option = this.options.singleSlider;\r\n      }\r\n      // Dots\r\n      if(typeof this.options.dots !== 'undefined') {\r\n        option = $.extend(option, {dots: this.options.dots});\r\n      }\r\n      // Arrows\r\n      if(typeof this.options.arrows !== 'undefined') {\r\n        option = $.extend(option, {arrows: this.options.arrows});\r\n      }\r\n      // fade : true / false\r\n      if(typeof this.options.fade !== 'undefined') {\r\n        option = $.extend(option, {fade: this.options.fade});\r\n      }\r\n      // Autoplay\r\n      if(typeof this.options.autoplay !== 'undefined') {\r\n        option = $.extend(option, {\r\n          autoplay: this.options.autoplay,\r\n          autoplaySpeed: 3000,\r\n        });\r\n      }\r\n      // Control\r\n      this.handle.slick(option);\r\n\r\n      this.handle.on('beforeChange.' + pluginName, function() {\r\n        that.zoomEffect(States.BEFORECHANGE);\r\n\r\n        if(typeof YT === 'object') {\r\n          that.element.find('[data-youtube]').youtube('pauseClip');\r\n          that.element.find('[data-video]').video('pauseClip');\r\n        }\r\n      });\r\n      this.handle.on('afterChange.' + pluginName, function() {\r\n        that.setPositionArrows();\r\n        that.zoomEffect(States.AFTERCHANGE);\r\n\r\n        // Auto play after Paused youtube/video\r\n        if(typeof YT === 'object') {\r\n          $('.slick-current', that.element).find('[data-youtube]').youtube('playClip');\r\n          $('.slick-current', that.element).find('[data-video]').video('playClip');\r\n        }\r\n      });\r\n      this.hoverBulletEvent();\r\n      this.setPositionArrows();\r\n      this.slickNoSlide();\r\n    },\r\n    onInitSlick: function() {\r\n      var that = this;\r\n      this.zoomEffect();\r\n      this.handle.off('click.currentItemEvents', '.slick-current').on('click.currentItemEvents', '.slick-current', function() {\r\n        if(that.options.hasPopup && win.width() > 767) {\r\n          that.turnOnPopup($(this));\r\n          return false;\r\n        }\r\n        if(that.options.smoothZoom && win.width() < 768) {\r\n          that.callSmoothZoom($(this).find('img').data('zoomImage'));\r\n        }\r\n      });\r\n    },\r\n    callSmoothZoom: function(imgSrc) {\r\n      this.element.find('[data-pinchzoom]').pinchzoom('initialize', imgSrc);\r\n    },\r\n    turnOnPopup: function(currentSlide) {\r\n      $.fancybox.open(\r\n        this.getGalleryList(currentSlide),\r\n        {\r\n          loop: false,\r\n          slideShow: false,\r\n          fullScreen: false,\r\n          thumbs: false\r\n        }\r\n      );\r\n    },\r\n    getGalleryList: function(currentSlide) {\r\n      var galleryList = [],\r\n        imgSrc,\r\n        list = this.handle.find('.slick-slide').not('.slick-cloned').find('img'),\r\n        currentImage = currentSlide.find('img').data('zoomImage'),\r\n        obj;\r\n\r\n      list.each(function() {\r\n        obj = {};\r\n        imgSrc = $(this).data('zoomImage');\r\n        obj.src = imgSrc;\r\n        if(imgSrc === currentImage) {\r\n          galleryList.unshift(obj);\r\n        }\r\n        else {\r\n          galleryList.push(obj);\r\n        }\r\n      });\r\n      return galleryList;\r\n    },\r\n    zoomEffect: function(stateSlider) {\r\n      if(this.options.hasZoom) {\r\n        switch(stateSlider) {\r\n          case States.BEFORECHANGE:\r\n            $('.slick-current', this.element).zoomer('destroy');\r\n            break;\r\n          case States.AFTERCHANGE:\r\n            $('.slick-current', this.element).zoomer('destroy');\r\n            $('.slick-current', this.element).zoomer('init');\r\n            break;\r\n          case States.RESIZE:\r\n            $('.slick-current', this.element).zoomer('destroy');\r\n            $('.slick-current', this.element).zoomer('init');\r\n            break;\r\n          default:\r\n            $('.slick-current', this.element).zoomer('init'); // First call zoomer of slider\r\n            break;\r\n        }\r\n      }\r\n    },\r\n    hoverBulletEvent: function() {\r\n      if(this.options[pluginName].slideOnHover) {\r\n        this.handle.find('.slick-dots').on('mouseenter.bullet', 'li', function() {\r\n          $(this).trigger('click');\r\n        });\r\n      }\r\n    },\r\n    setPositionArrows: function() {\r\n      var arrowControl = this.handle.find('.slick-arrow'),\r\n        imgVisible = this.handle.find('[aria-hidden=\"false\"] .img-view'),\r\n        maxHeight = 0,\r\n        posTop = 0;\r\n\r\n      if(this.options.setPositionArrows) {\r\n        $(imgVisible).each(function() {\r\n          maxHeight = Math.max($(this).height(), maxHeight);\r\n        });\r\n        posTop = (maxHeight / 2);\r\n        arrowControl.animate({'top': posTop}, 300);\r\n      }\r\n    },\r\n    slickNoSlide: function() {\r\n      var getSlick = this.handle.slick('getSlick');\r\n\r\n      if(getSlick.slideCount <= getSlick.options.slidesToShow) {\r\n        this.element.addClass('no-slide');\r\n      }\r\n      else {\r\n        this.element.removeClass('no-slide');\r\n      }\r\n    },\r\n    slickPause: function() {\r\n      this.handle.slickPause();\r\n    },\r\n    slickPlay: function() {\r\n      this.handle.slickPlay();\r\n    },\r\n    destroy: function() {\r\n      this.handle\r\n        .slick('unslick')\r\n        .off('afterChange.' + pluginName);\r\n    }\r\n  };\r\n\r\n  $.fn[pluginName] = function(options, params) {\r\n    return this.each(function() {\r\n      var instance = $.data(this, pluginName);\r\n      if (!instance) {\r\n        $.data(this, pluginName, new Plugin(this, options));\r\n      } else if (instance[options]) {\r\n        instance[options](params);\r\n      }\r\n    });\r\n  };\r\n\r\n  $.fn[pluginName].defaults = {\r\n    handle: '.slick',\r\n    singleSlider: {\r\n      infinite: true,\r\n      speed: 600,\r\n      slidesToShow: 1,\r\n      zIndex: 5,\r\n      accessibility: false, // Disable Slide go to top on after change\r\n      rtl: $('html').attr('dir') === 'rtl' ? true : false\r\n    },\r\n    carousel: {\r\n      infinite: true,\r\n      speed: 600,\r\n      slidesToShow: 6,\r\n      slidesToScroll: 2,\r\n      // autoplay: true,\r\n      // autoplaySpeed: 3000,\r\n      zIndex: 5,\r\n      rtl: $('html').attr('dir') === 'rtl' ? true : false,\r\n      responsive: [\r\n        {\r\n          breakpoint: 1024,\r\n          settings: {\r\n            slidesToShow: 4\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 768,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 544,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    centerMode: {\r\n      centerMode: true,\r\n      slidesToShow: 1,\r\n      focusOnSelect: false,\r\n      centerPadding: '0',\r\n      zIndex: 5,\r\n      rtl: $('html').attr('dir') === 'rtl' ? true : false,\r\n      responsive: [\r\n        {\r\n          breakpoint: 1024,\r\n          settings: {\r\n            slidesToShow: 1,\r\n            centerPadding: '25%'\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 768,\r\n          settings: {\r\n            slidesToShow: 1,\r\n            centerPadding: 0\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    videoSlide: {\r\n      centerMode: true,\r\n      slidesToShow: 1,\r\n      focusOnSelect: false,\r\n      centerPadding: '0',\r\n      zIndex: 5,\r\n      rtl: $('html').attr('dir') === 'rtl' ? true : false,\r\n      responsive: [\r\n        {\r\n          breakpoint: 1024,\r\n          settings: {\r\n            slidesToShow: 1,\r\n            centerPadding: 0\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 768,\r\n          settings: {\r\n            slidesToShow: 1,\r\n            centerPadding: 0\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    sycingView: {\r\n      infinite: true,\r\n      speed: 600,\r\n      slidesToShow: 1,\r\n      zIndex: 5,\r\n      rtl: $('html').attr('dir') === 'rtl' ? true : false\r\n    },\r\n    sycingThumb: {\r\n      infinite: true,\r\n      speed: 600,\r\n      slidesToShow: 5,\r\n      slidesToScroll: 1,\r\n      centerMode: true,\r\n      centerPadding: 0,\r\n      focusOnSelect: true,\r\n      // autoplay: true,\r\n      // autoplaySpeed: 3000,\r\n      zIndex: 5,\r\n      rtl: $('html').attr('dir') === 'rtl' ? true : false,\r\n      responsive: [\r\n        {\r\n          breakpoint: 1024,\r\n          settings: {\r\n            slidesToShow: 3,\r\n            slidesToScroll: 1\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    variableWidth: {\r\n      speed: 600,\r\n      variableWidth: true,\r\n      infinite: true,\r\n      zIndex: 5\r\n    },\r\n    vertical: {\r\n      vertical: true,\r\n      verticalSwiping: true,\r\n      slidesToShow: 3,\r\n      slidesToScroll: 1,\r\n      zIndex: 5\r\n    }\r\n  };\r\n\r\n  $(function() {\r\n    $('[data-' + pluginName + ']')[pluginName]();\r\n  });\r\n\r\n}(jQuery, window));\r\n","/**\r\n *  @name sticky\r\n *  @description description\r\n *  @version 1.0\r\n *  @options\r\n *    option\r\n *  @events\r\n *    event\r\n *  @methods\r\n *    init\r\n *    publicMethod\r\n *    destroy\r\n */\r\n;(function($, window, undefined) {\r\n  'use strict';\r\n\r\n  var pluginName = 'sticky',\r\n    win = $(window),\r\n    resizeTimeout,\r\n    resize = ('onorientationchange' in window) ? 'orientationchange.resize' + pluginName : 'resize.resize' + pluginName;\r\n\r\n  function Plugin(element, options) {\r\n    this.element = $(element);\r\n    this.options = $.extend({}, $.fn[pluginName].defaults, this.element.data(), options, this.element.data(pluginName));\r\n    this.init();\r\n  }\r\n\r\n  Plugin.prototype = {\r\n    init: function() {\r\n      this.status = false;\r\n      this.option = {\r\n        offset_top: $('.nav-container').height()\r\n      };\r\n      if(win.width() > 767) {\r\n        this.initialized();\r\n      }\r\n      this.listener();\r\n    },\r\n    listener: function() {\r\n      win.off(resize).on(resize, function() {\r\n        if(resizeTimeout) {\r\n          clearTimeout(resizeTimeout);\r\n        }\r\n        resizeTimeout = setTimeout(function() {\r\n          $('[data-' + pluginName + ']').each(function() {\r\n            if(win.width() > 767 && !$(this).data()[pluginName].status) {\r\n              $(this)[pluginName]('init');\r\n            }\r\n            else if(win.width() < 767 && $(this).data()[pluginName].status) {\r\n              $(this)[pluginName]('destroy');\r\n            }\r\n          });\r\n        }, 300);\r\n      });\r\n    },\r\n    initialized: function() {\r\n      this.status = true;\r\n      this.element.stick_in_parent(this.option);\r\n    },\r\n    destroy: function() {\r\n      this.status = false;\r\n      this.element.trigger('sticky_kit:detach');\r\n      //$.removeData(this.element[0], pluginName);\r\n    }\r\n  };\r\n\r\n  $.fn[pluginName] = function(options, params) {\r\n    return this.each(function() {\r\n      var instance = $.data(this, pluginName);\r\n      if (!instance) {\r\n        $.data(this, pluginName, new Plugin(this, options));\r\n      } else if (instance[options]) {\r\n        instance[options](params);\r\n      }\r\n    });\r\n  };\r\n\r\n  $.fn[pluginName].defaults = {\r\n  };\r\n\r\n  $(function() {\r\n    if($('body').hasClass('catalog-category-view') || $('body').hasClass('catalogsearch-result-index')) {\r\n      $('[data-' + pluginName + ']')[pluginName]();\r\n    }\r\n  });\r\n}(jQuery, window));","/**\r\n *  @name table\r\n *  @description description\r\n *  @version 1.0\r\n *  @options\r\n *    option\r\n *  @events\r\n *    click\r\n *  @methods\r\n *    init\r\n *    initialized\r\n *    destroy\r\n */\r\n;(function($, window, undefined) {\r\n  'use strict';\r\n\r\n  var pluginName = 'table';\r\n\r\n  function Plugin(element, options) {\r\n    this.element = $(element);\r\n    this.options = $.extend({}, $.fn[pluginName].defaults, this.element.data(), options, this.element.data(pluginName));\r\n    this.init();\r\n  }\r\n\r\n  Plugin.prototype = {\r\n    init: function() {\r\n      if(this.element.find('tr').eq(0).find('td').length > 2) {\r\n        this.initialized();\r\n        this.listener();\r\n      }\r\n    },\r\n    initialized: function() {\r\n      this.element\r\n        .find('tr')\r\n        .find('td:last-child')\r\n        .addClass('last');\r\n      this.element\r\n        .find('tr')\r\n        .find('td:first-child')\r\n        .next()\r\n        .addClass('first');\r\n      this.element\r\n        .find('tr')\r\n        .eq(0)\r\n        .append('<td class=\"' + this.options.emptyTdCls + ' next-btn\" data-next=\"\"><a class=\"icon-angle-right\"></a></td>')\r\n        .find('.head-title')\r\n        .after('<td class=\"' + this.options.emptyTdCls + ' prev-btn disabled\" data-prev=\"\"><a class=\"icon-angle-left\"></a></td>');\r\n      this.element\r\n        .find('tr')\r\n        .eq(0)\r\n        .nextAll()\r\n        .append('<td class=\"' + this.options.emptyTdCls + '\"></td>')\r\n        .find('.head-title')\r\n        .after('<td class=\"' + this.options.emptyTdCls + '\"></td>');\r\n\r\n      this.curentItems = [];\r\n      for(var i = 2, n = 2 + this.options.items; i < n; i++) {\r\n        this.curentItems.push(i);\r\n      }\r\n      this.addClassHandler(this.curentItems);\r\n    },\r\n    listener: function() {\r\n      this.element.find(this.options.prevBtn).off('click.prev' + pluginName).on('click.prev' + pluginName, $.proxy(this.prevEvent, this));\r\n      this.element.find(this.options.nextBtn).off('click.next' + pluginName).on('click.next' + pluginName, $.proxy(this.nextEvent, this));\r\n    },\r\n    prevEvent: function() {\r\n      if(!$(this.options.prevBtn).hasClass(this.options.disabledCls)) {\r\n        $(this.options.nextBtn).removeClass(this.options.disabledCls);\r\n        // Remove end\r\n        this.curentItems.pop();\r\n        // Add first\r\n        this.curentItems.unshift(this.curentItems[0] - 1);\r\n        this.addClassHandler(this.curentItems);\r\n        if(this.element.find('td').eq(this.curentItems[0]).hasClass('first')) {\r\n          $(this.options.prevBtn).addClass(this.options.disabledCls);\r\n        }\r\n      }\r\n    },\r\n    nextEvent: function() {\r\n      if(!$(this.options.nextBtn).hasClass(this.options.disabledCls)) {\r\n        $(this.options.prevBtn).removeClass(this.options.disabledCls);\r\n        // Remove first\r\n        this.curentItems.shift();\r\n        // Add end\r\n        this.curentItems.push(this.curentItems[this.curentItems.length - 1] + 1);\r\n        this.addClassHandler(this.curentItems);\r\n        if(this.element.find('td').eq(this.curentItems[this.curentItems.length-1]).hasClass('last')) {\r\n          $(this.options.nextBtn).addClass(this.options.disabledCls);\r\n        }\r\n      }\r\n    },\r\n    addClassHandler: function(arr) {\r\n      this.element.find('td.active').removeClass(this.options.activeCls);\r\n      for(var i = 0, n = this.element.find('tr').length; i < n; i++) {\r\n        for(var j = 0, m = arr.length; j < m; j++) {\r\n          this.element.find('tr').eq(i).find('td').eq(arr[j]).addClass(this.options.activeCls);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  $.fn[pluginName] = function(options, params) {\r\n    return this.each(function() {\r\n      var instance = $.data(this, pluginName);\r\n      if (!instance) {\r\n        $.data(this, pluginName, new Plugin(this, options));\r\n      } else if (instance[options]) {\r\n        instance[options](params);\r\n      }\r\n    });\r\n  };\r\n\r\n  $.fn[pluginName].defaults = {\r\n    disabledCls: 'disabled',\r\n    activeCls: 'active',\r\n    emptyTdCls: 'empty',\r\n    prevBtn: '[data-prev]',\r\n    nextBtn: '[data-next]'\r\n  };\r\n\r\n  $(function() {\r\n    $('[data-' + pluginName + ']')[pluginName]();\r\n  });\r\n\r\n}(jQuery, window));\r\n","/**\r\n *  @name validates\r\n *  @description Use jQuery Validation\r\n *  @methods\r\n *    init\r\n *    reset\r\n */\r\n\r\n;(function($, window, undefined) {\r\n  'use strict';\r\n\r\n  var pluginName = 'validates';\r\n  var getRules = function(formId) {\r\n    var rules = {};\r\n    switch (formId) {\r\n      case 'guide':\r\n        rules = $.extend(rules, {\r\n          guide_cb_group: {\r\n            required: true,\r\n            minlength: 2\r\n          },\r\n          horizontal_guide_cb_group: {\r\n            required: true,\r\n            minlength: 2\r\n          }\r\n        });\r\n        break;\r\n      default:\r\n    }\r\n    return rules;\r\n  },\r\n  messages = function(formId) {\r\n    var messages = {};\r\n    switch (formId) {\r\n      case 'guide':\r\n        messages = $.extend(messages, {\r\n          guide_cb_group: {minlength: L10n.validateMess.minlengthcheckbox},\r\n          horizontal_guide_cb_group: {minlength: L10n.validateMess.minlengthcheckbox}\r\n        });\r\n        break;\r\n      default:\r\n    }\r\n    return messages;\r\n  };\r\n\r\n  function Plugin(element, options) {\r\n    this.element = $(element);\r\n    this.options = $.extend({}, $.fn[pluginName].defaults, this.element.data(), options, this.element.data(pluginName));\r\n    this.init();\r\n  }\r\n\r\n  Plugin.prototype = {\r\n    init: function() {\r\n      var that = this;\r\n      this.formId = this.element.find('form').attr('id');\r\n      this.isHideMessage = this.options.isHideMessage;\r\n\r\n      $('#' + this.formId).validate({\r\n        rules: getRules.call(that, that.formId),\r\n        messages: messages.call(that, that.formId),\r\n        errorElement: 'p',\r\n        highlight: function(element) {\r\n          $(element).addClass('error').closest('.fieldset').addClass('errors');\r\n        },\r\n        unhighlight: function(element) {\r\n          $(element).removeClass('error');\r\n          if(!$(element).closest('.fieldset').find(that.options.groupCls).hasClass('error')) {\r\n            $(element).removeClass('error').closest('.fieldset').removeClass('errors');\r\n          }\r\n        },\r\n        invalidHandler: function(event, validator) {\r\n          var errors = validator.numberOfInvalids();\r\n          console.log(errors);\r\n        },\r\n        errorPlacement: function(error, element) {\r\n          if(!that.isHideMessage) {\r\n            if ($(element).is('select')) {\r\n              error.insertAfter(element.closest('.custom-select'));\r\n            }\r\n            else if ($(element).closest('.custom-input').length) {\r\n              error.insertAfter(element.closest('.custom-input'));\r\n            }\r\n            else if ($(element).closest('.radio-list').length) {\r\n              error.insertAfter(element.closest('.radio-list'));\r\n            }\r\n            else if ($(element).closest('.checkbox-list').length) {\r\n              error.insertAfter(element.closest('.checkbox-list'));\r\n            }\r\n            else if($(element).attr('type') === 'date') {\r\n              error.insertAfter(element.closest('.custom-date'));\r\n              return false;\r\n            }\r\n            else if($(element).attr('type') === 'file') {\r\n              error.insertAfter(element.closest('.custom-file'));\r\n              return false;\r\n            }\r\n            else if($(element).is(':checkbox')) {\r\n              error.insertAfter(element.closest('.checkbox'));\r\n            }\r\n            else if($(element).is(':radio')) {\r\n              error.insertAfter(element.closest('.radio'));\r\n            }\r\n            else {\r\n              error.insertAfter(element);\r\n            }\r\n          }\r\n        },\r\n        submitHandler: function(form) {\r\n          switch (that.formId) {\r\n            case 'guide':\r\n              console.log(123);\r\n              form.submit();\r\n              break;\r\n            default:\r\n              form.submit();\r\n              return false;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    reset: function() {\r\n      $('#' + this.formId).resetForm();\r\n    }\r\n  };\r\n\r\n  $.fn[pluginName] = function(options, params) {\r\n    return this.each(function() {\r\n      var instance = $.data(this, pluginName);\r\n      if (!instance) {\r\n        $.data(this, pluginName, new Plugin(this, options));\r\n      } else if (instance[options]) {\r\n        instance[options](params);\r\n      }\r\n    });\r\n  };\r\n\r\n  $.fn[pluginName].defaults = {\r\n    groupCls: '.valid-group'\r\n  };\r\n\r\n  $(function() {\r\n    $('[data-' + pluginName + ']')[pluginName]();\r\n  });\r\n\r\n}(jQuery, window));\r\n","/**\r\n *  @name Video\r\n *  @description Control Play/Pause/Ended Video HTML5\r\n *  @version 1.0\r\n */\r\n;(function($, window, undefined) {\r\n  'use strict';\r\n\r\n  var pluginName = 'video';\r\n  var Statuses = {\r\n    PAUSED: 'paused',\r\n    PLAYING: 'playing',\r\n    LOADING: 'loading',\r\n    ENDED: 'ended'\r\n  };\r\n  var ClassNames = {\r\n    PAUSED: 'paused',\r\n    PLAYING: 'playing',\r\n    LOADING: 'loading',\r\n    ENDED: 'ended'\r\n  };\r\n\r\n  function Plugin(element, options) {\r\n    this.element = $(element);\r\n    this.options = $.extend({}, $.fn[pluginName].defaults, this.element.data(), options, this.element.data(pluginName));\r\n    this.init();\r\n  }\r\n\r\n  Plugin.prototype = {\r\n    init: function() {\r\n      var that = this;\r\n      this.status = Statuses.PAUSED;\r\n      this.handle = this.element.find(this.options.handle);\r\n      this.video = this.element.find('video');\r\n      var isClick = false;\r\n      this.handle\r\n      .off('mousedown.' + pluginName).on('mousedown.' + pluginName, function() {\r\n        isClick = true;\r\n      }).off('mousemove.' + pluginName).on('mousemove.' + pluginName, function() {\r\n        isClick = false;\r\n      }).off('click.' + pluginName).on('click.' + pluginName, function(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if(isClick) {\r\n          switch(that.status) {\r\n            case Statuses.PAUSED:\r\n            case Statuses.ENDED:\r\n              that.firstPlay = true;\r\n              that.playClip(that.firstPlay);\r\n              break;\r\n            case Statuses.PLAYING:\r\n              that.pauseClip();\r\n              break;\r\n          }\r\n        }\r\n      });\r\n\r\n      this.video.get(0).addEventListener('waiting', this.waitingLoad, false);\r\n      this.video.get(0).addEventListener('pause', this.onPausing, false);\r\n      this.video.get(0).addEventListener('playing', this.onPlaying, false);\r\n      this.video.get(0).addEventListener('ended', this.endVideo, false);\r\n    },\r\n    playClip: function() {\r\n      if(this.firstPlay) {\r\n        $('[data-youtube]').length && $('[data-youtube]').youtube('pauseClip');\r\n        $('[data-video]').video('pauseClip');\r\n        this.element.removeClass(ClassNames.PAUSED + ' ' + ClassNames.LOADING + ' ' + ClassNames.ENDED).addClass(ClassNames.PLAYING);\r\n        this.status = Statuses.PLAYING;\r\n        this.video.get(0).play();\r\n      }\r\n    },\r\n    pauseClip: function() {\r\n      if(this.status === Statuses.PLAYING) {\r\n        this.element.removeClass(ClassNames.PLAYING + ' ' + ClassNames.LOADING + ' ' + ClassNames.ENDED).addClass(ClassNames.PAUSED);\r\n        this.status = Statuses.PAUSED;\r\n        this.video.get(0).pause();\r\n      }\r\n    },\r\n    waitingLoad: function() {\r\n      $(this).closest('[data-' + pluginName + ']').addClass(ClassNames.LOADING);\r\n      $(this).closest('[data-' + pluginName + ']').data('video').status = Statuses.LOADING;\r\n    },\r\n    onPausing: function() {\r\n      $(this).closest('[data-' + pluginName + ']').removeClass(ClassNames.PLAYING + ' ' + ClassNames.LOADING + ' ' + ClassNames.ENDED).addClass(ClassNames.PAUSED);\r\n      $(this).closest('[data-' + pluginName + ']').data('video').status = Statuses.PAUSED;\r\n    },\r\n    onPlaying: function() {\r\n      $(this).closest('[data-' + pluginName + ']').removeClass(ClassNames.PAUSED + ' ' + ClassNames.LOADING + ' ' + ClassNames.ENDED).addClass(ClassNames.PLAYING);\r\n      $(this).closest('[data-' + pluginName + ']').data('video').status = Statuses.PLAYING;\r\n    },\r\n    endVideo: function() {\r\n      $(this).closest('[data-' + pluginName + ']').removeClass(ClassNames.PAUSED + ' ' + ClassNames.PLAYING).addClass(ClassNames.ENDED);\r\n      $(this).closest('[data-' + pluginName + ']').data('video').status = Statuses.ENDED;\r\n    }\r\n  };\r\n\r\n  $.fn[pluginName] = function(options, params) {\r\n    return this.each(function() {\r\n      var instance = $.data(this, pluginName);\r\n      if (!instance) {\r\n        $.data(this, pluginName, new Plugin(this, options));\r\n      } else if (instance[options]) {\r\n        instance[options](params);\r\n      }\r\n    });\r\n  };\r\n\r\n  $.fn[pluginName].defaults = {\r\n    handle: '[data-handle]'\r\n  };\r\n\r\n  $(function() {\r\n    $('[data-' + pluginName + ']')[pluginName]();\r\n  });\r\n\r\n}(jQuery, window));\r\n","/**\r\n *  @name youtube\r\n *  @description Control play/pause/end youtube, using youtube API\r\n *  @version 1.0\r\n */\r\n;(function($, window, undefined) {\r\n  'use strict';\r\n\r\n  var pluginName = 'youtube';\r\n  var Statuses = {\r\n    UNLOAD: 'unload',\r\n    PAUSED: 'paused',\r\n    PLAYING: 'playing',\r\n    LOADING: 'loading',\r\n    ENDED: 'ended'\r\n  };\r\n  var ClassNames = {\r\n    PAUSED: 'paused',\r\n    PLAYING: 'playing',\r\n    LOADING: 'loading',\r\n    ENDED: 'ended'\r\n  };\r\n  var getYoutubeId = function(url) {\r\n    var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/,\r\n      match = url.match(regExp);\r\n    return (match && match[7].length === 11) ? match[7] : false;\r\n  };\r\n\r\n  function Plugin(element, options) {\r\n    this.element = $(element);\r\n    this.options = $.extend({}, $.fn[pluginName].defaults, this.element.data(), options, this.element.data(pluginName));\r\n    this.init();\r\n  }\r\n\r\n  Plugin.prototype = {\r\n    init: function() {\r\n      this.handle = this.element.find(this.options.handle);\r\n      this.iframeCls = this.element.find(this.options.iframeCls);\r\n      this.idVideo = !!getYoutubeId.call(this, this.options.idOrLink) ? getYoutubeId.call(this, this.options.idOrLink) : this.options.idOrLink;\r\n      this.status = Statuses.UNLOAD;\r\n      this.autoplay = this.options.autoplay ? this.options.autoplay : 0;\r\n      if(typeof YT === 'object') {\r\n        this.initYoutube();\r\n      }\r\n    },\r\n    initYoutube: function() {\r\n      var that = this;\r\n\r\n      that.player = new YT.Player(this.iframeCls.get(0), {\r\n        videoId: that.idVideo,\r\n        playerVars: {\r\n          'autoplay': that.autoplay,\r\n          'rel': 1,\r\n          'showinfo': 0,\r\n          'controls': 1,\r\n          'modestbranding': 0\r\n        },\r\n        events: {\r\n          onReady: function() {\r\n            that.listener();\r\n          },\r\n          onStateChange: function(event) {\r\n            that.onPlayerStateChange(event, that);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    listener: function() {\r\n      var that = this,\r\n        isClick = false;\r\n      this.handle\r\n      .off('mousedown.' + pluginName).on('mousedown.' + pluginName, function() {\r\n        isClick = true;\r\n      }).off('mousemove.' + pluginName).on('mousemove.' + pluginName, function() {\r\n        isClick = false;\r\n      }).off('click.' + pluginName).on('click.' + pluginName, function(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if(isClick) { // Check for touchmouve on slider\r\n          switch(that.status) {\r\n            case Statuses.UNLOAD:\r\n            case Statuses.ENDED:\r\n              that.playClip(true);\r\n              break;\r\n            case Statuses.PAUSED:\r\n              that.playClip();\r\n              break;\r\n            case Statuses.PLAYING:\r\n              that.pauseClip();\r\n              break;\r\n            case Statuses.LOADING:\r\n              break;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    playClip: function(isUnload) {\r\n      if(isUnload || this.status === Statuses.PAUSED) {// Use on case use: $('[data-youtube]').youtube('pauseClip');\r\n        $('[data-video]').length && $('[data-video]').video('pauseClip');\r\n        $('[data-youtube]').youtube('pauseClip');\r\n        this.player.playVideo();\r\n        this.element\r\n          .addClass(ClassNames.PLAYING)\r\n          .removeClass(ClassNames.PAUSED + ' ' + ClassNames.LOADING + ' ' + ClassNames.ENDED);\r\n      }\r\n    },\r\n    pauseClip: function() {\r\n      if(this.status === Statuses.PLAYING) {// Use on case use: $('[data-youtube]').youtube('pauseClip');\r\n        this.player.pauseVideo();\r\n        this.element\r\n          .addClass(ClassNames.PAUSED)\r\n          .removeClass(ClassNames.PLAYING + ' ' + ClassNames.LOADING + ' ' + ClassNames.ENDED);\r\n      }\r\n    },\r\n    onPlayerStateChange: function(event, plugin) {\r\n      switch (event.data) {\r\n        case YT.PlayerState.PAUSED:\r\n          plugin.status = Statuses.PAUSED;\r\n          plugin.element\r\n            .addClass(ClassNames.PAUSED)\r\n            .removeClass(ClassNames.PLAYING + ' ' + ClassNames.LOADING + ' ' + ClassNames.ENDED);\r\n          break;\r\n        case YT.PlayerState.PLAYING:\r\n          plugin.status = Statuses.PLAYING;\r\n          plugin.element\r\n            .addClass(ClassNames.PLAYING)\r\n            .removeClass(ClassNames.PAUSED + ' ' + ClassNames.LOADING + ' ' + ClassNames.ENDED);\r\n          break;\r\n        case YT.PlayerState.BUFFERING:\r\n          plugin.status = Statuses.LOADING;\r\n          break;\r\n        case YT.PlayerState.ENDED:\r\n          plugin.status = Statuses.ENDED;\r\n          plugin.element\r\n            .addClass(ClassNames.ENDED)\r\n            .removeClass(ClassNames.PLAYING + ' ' + ClassNames.LOADING + ' ' + ClassNames.PAUSED);\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  $.fn[pluginName] = function(options, params) {\r\n    return this.each(function() {\r\n      var instance = $.data(this, pluginName);\r\n      if (!instance) {\r\n        $.data(this, pluginName, new Plugin(this, options));\r\n      } else if (instance[options]) {\r\n        instance[options](params);\r\n      }\r\n    });\r\n  };\r\n\r\n  $.fn[pluginName].defaults = {\r\n    handle: '[data-handle]',\r\n    iframeCls: '.iframeYoutube'\r\n  };\r\n\r\n  $(function() {\r\n    var tag = document.createElement('script');\r\n    tag.src = 'https://www.youtube.com/iframe_api';\r\n    var firstScriptTag = document.getElementsByTagName('script')[0];\r\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n    window.onYouTubeIframeAPIReady = function() {\r\n      $('[data-' + pluginName + ']')[pluginName]();\r\n    };\r\n  });\r\n\r\n}(jQuery, window));\r\n","/**\r\n *  @name plugin\r\n *  @description description\r\n *  @version 1.0\r\n *  @options\r\n *    option\r\n *  @events\r\n *    event\r\n *  @methods\r\n *    init\r\n *    publicMethod\r\n *    destroy\r\n */\r\n;(function($, window, undefined) {\r\n  'use strict';\r\n\r\n  var pluginName = 'zoomer',\r\n    win = $(window),\r\n    zoomTimer,\r\n    resize = ('onorientationchange' in window) ? 'orientationchange.resize' + pluginName : 'resize.resize' + pluginName;\r\n\r\n  function Plugin(element, options) {\r\n    this.element = $(element);\r\n    this.options = $.extend({}, $.fn[pluginName].defaults, this.element.data(), options, this.element.data(pluginName));\r\n    this.init();\r\n  }\r\n\r\n  Plugin.prototype = {\r\n    init: function() {\r\n      this.handle = this.element.find(this.options.handle);\r\n\r\n      if(this.element.is(':visible') && win.width() > 767) {\r\n        this.checkImgLoad();\r\n      }\r\n      win.off(resize).on(resize, function() {\r\n        if(zoomTimer) {\r\n          clearTimeout(zoomTimer);\r\n        }\r\n        zoomTimer = setTimeout(function() {\r\n          if($('[data-' + pluginName + ']').is(':visible') && win.width() > 767) {\r\n            $('[data-' + pluginName + ']')[pluginName]('destroy');\r\n            $('[data-' + pluginName + ']')[pluginName]('init');\r\n          }\r\n          else {\r\n            $('[data-' + pluginName + ']')[pluginName]('destroy');\r\n          }\r\n        }, 300);\r\n      });\r\n    },\r\n    checkImgLoad: function() {\r\n      var that = this,\r\n        imagesLoaded = 0,\r\n        totalImages = this.element.find('img').length;\r\n\r\n      this.element.find('img').each(function() {\r\n        var fakeSrc = $(this).attr('src');\r\n\r\n        $('<img />')\r\n          .attr('src', fakeSrc).css('display', 'none')\r\n          .on('load.' + pluginName, function() {\r\n            ++imagesLoaded;\r\n            if (imagesLoaded === totalImages) {\r\n              $.isFunction(that.defineOption) && that.defineOption();\r\n            }\r\n          })\r\n          .on('error.' + pluginName, function() {\r\n            ++imagesLoaded;\r\n            if (imagesLoaded === totalImages) {\r\n              $.isFunction(that.defineOption) && that.defineOption();\r\n            }\r\n          });\r\n      });\r\n    },\r\n    defineOption: function() {\r\n      var windowZoom = {},\r\n        that = this;\r\n\r\n      this.option = {\r\n        borderSize: 1,\r\n        borderColour: '#ddd',\r\n        cursor: 'crosshair',\r\n        easing: true,\r\n        loadingIcon: 'images/loading.svg',\r\n        responsive: true,\r\n        zoomType: 'inner',\r\n        lensColour: '#fff',\r\n        lensOpacity: 0.4,\r\n        zoomId: this.options.zoomId,\r\n        onDestroy: function() {\r\n          //console.log('onDestroy');\r\n        },\r\n        onImageClick: function() {\r\n          //console.log('onImageClick');\r\n        },\r\n        onShow: function() {\r\n          //console.log('onShow');\r\n        },\r\n        onZoomedImageLoaded: function() {\r\n          //console.log('onZoomedImageLoaded');\r\n          that.element.addClass('zoomLoaded');\r\n        },\r\n        onImageSwap: function() {\r\n          //console.log('onImageSwap');\r\n        },\r\n        onImageSwapComplete: function() {\r\n          //console.log('onImageSwapComplete');\r\n        }\r\n      };\r\n\r\n      if(win.width() > 1023) {\r\n        windowZoom = {\r\n          zoomType: 'window',\r\n          zoomWindowWidth: this.options.zoomWindowWidth,\r\n          zoomWindowHeight: this.options.zoomWindowHeight,\r\n          zoomWindowOffetx: this.options.zoomWindowOffetx,\r\n          scrollZoom: true\r\n        };\r\n      }\r\n      if(win.width() < 1024 && win.width() > 767) {// tablet\r\n        windowZoom = {};\r\n      }\r\n      this.option = $.extend({}, this.option, windowZoom);\r\n      this.initialized(this.option);\r\n    },\r\n    initialized: function(opts) {\r\n      this.handle.ezPlus(opts);\r\n    },\r\n    destroy: function() {\r\n      this.element.removeClass('zoomLoaded');\r\n      this.handle.removeData('ezPlus');\r\n      this.handle.removeData('zoomImage');\r\n      this.handle.off('mouseleave mouseenter mouseover mousemove mouseout mousewheel touchend touchmove click DOMMouseScroll MozMousePixelScroll');\r\n      $('.zoomContainer').filter('[uuid=\"' + this.options.zoomId + '\"]').remove();\r\n      // $.removeData(this.element[0], pluginName);\r\n    }\r\n  };\r\n\r\n  $.fn[pluginName] = function(options, params) {\r\n    return this.each(function() {\r\n      var instance = $.data(this, pluginName);\r\n      if (!instance) {\r\n        $.data(this, pluginName, new Plugin(this, options));\r\n      } else if (instance[options]) {\r\n        instance[options](params);\r\n      }\r\n    });\r\n  };\r\n\r\n  $.fn[pluginName].defaults = {\r\n    handle: '.zoomer',\r\n    zoomWindowWidth: 400,\r\n    zoomWindowHeight: 400,\r\n    zoomWindowOffetx: 100\r\n  };\r\n\r\n  $(function() {\r\n    $('[data-' + pluginName + ']')[pluginName]();\r\n  });\r\n\r\n}(jQuery, window));\r\n"]}